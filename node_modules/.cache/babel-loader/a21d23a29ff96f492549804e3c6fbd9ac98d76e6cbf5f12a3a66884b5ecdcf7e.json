{"ast":null,"code":"import { Enemy } from \"./classes/Enemy.ts\";\nimport { CONFIG } from \"./config.ts\";\nconst ENEMY_COLORS = [\"#eb4034\", \"#635a19\", \"#b34a09\", \"#0a6349\", \"#0b1852\", \"#380613\", \"#000000\"];\nexport default function createEnemy(enemiesRef, difficulty, firstPlayer, type, frameMultiplier, imageCache) {\n  if (enemiesRef.length >= CONFIG.MAX_ENEMIES) {\n    return enemiesRef;\n  }\n  const padding = 100;\n  const randomX = padding + Math.random() * (CONFIG.CANVAS_WIDTH - padding * 2);\n  const randomY = padding + Math.random() * (CONFIG.CANVAS_HEIGHT - padding * 2);\n  let difficultyMultiplier = Math.min(1 + difficulty * 0.1, 2.5);\n  const baseBulletSpeed = (1.2 + Math.random() * 1) * frameMultiplier;\n  const baseFireRate = 2500 + Math.random() * 1500;\n  const baseMoveSpeed = (0.3 + Math.random() * 0.4) * frameMultiplier;\n  const bulletSpeed = type === \"fire\" ? 2 * frameMultiplier : Math.min(baseBulletSpeed * difficultyMultiplier, 4);\n  const fireRate = type === \"fire\" ? 800 : Math.max(baseFireRate / difficultyMultiplier, 800);\n  const moveSpeed = type === \"fire\" ? 5 * frameMultiplier : Math.min(baseMoveSpeed * difficultyMultiplier, 1.5);\n  const enemyKeys = Object.keys(imageCache.enemies);\n  const fireKeys = Object.keys(imageCache.fire);\n  let characterImage;\n  if (type === \"fire\" && fireKeys.length > 0) {\n    characterImage = imageCache.fire[0];\n  } else if (enemyKeys.length > 0) {\n    const randomKey = enemyKeys[Math.floor(Math.random() * enemyKeys.length)];\n    characterImage = imageCache.enemies[randomKey];\n  }\n  if (!characterImage) {\n    console.error(\"Can't get image for monanimal type:\", type);\n  }\n  const bulletColor = type === \"fire\" ? \"orange\" : ENEMY_COLORS[Math.floor(Math.random() * ENEMY_COLORS.length)];\n  const spawnTime = firstPlayer ? Date.now() + 3000 : Date.now();\n  enemiesRef.push(new Enemy(randomX, randomY, bulletSpeed, fireRate, moveSpeed, bulletColor, spawnTime, type, characterImage));\n  return enemiesRef;\n}","map":{"version":3,"names":["Enemy","CONFIG","ENEMY_COLORS","createEnemy","enemiesRef","difficulty","firstPlayer","type","frameMultiplier","imageCache","length","MAX_ENEMIES","padding","randomX","Math","random","CANVAS_WIDTH","randomY","CANVAS_HEIGHT","difficultyMultiplier","min","baseBulletSpeed","baseFireRate","baseMoveSpeed","bulletSpeed","fireRate","max","moveSpeed","enemyKeys","Object","keys","enemies","fireKeys","fire","characterImage","randomKey","floor","console","error","bulletColor","spawnTime","Date","now","push"],"sources":["/home/nick/Desktop/Monagaynanimas/src/game/createEnemy.ts"],"sourcesContent":["import { Enemy } from \"./classes/Enemy.ts\";\nimport { CONFIG } from \"./config.ts\";\n\nconst ENEMY_COLORS = [\"#eb4034\", \"#635a19\", \"#b34a09\", \"#0a6349\", \"#0b1852\", \"#380613\", \"#000000\"];\n\nexport default function createEnemy(enemiesRef, difficulty: number, firstPlayer: boolean, type: string, frameMultiplier: number, imageCache: any) {\n  if (enemiesRef.length >= CONFIG.MAX_ENEMIES) {\n    return enemiesRef;\n  }\n  \n  const padding = 100;\n  const randomX = padding + Math.random() * (CONFIG.CANVAS_WIDTH - padding * 2);\n  const randomY = padding + Math.random() * (CONFIG.CANVAS_HEIGHT - padding * 2);\n\n  let difficultyMultiplier = Math.min(1 + difficulty * 0.1, 2.5);\n\n  const baseBulletSpeed = ( 1.2 + Math.random() * 1 ) * frameMultiplier;\n  const baseFireRate = 2500 + Math.random() * 1500;\n  const baseMoveSpeed = ( 0.3 + Math.random() * 0.4) * frameMultiplier;\n  \n  const bulletSpeed = type === \"fire\" ? 2 * frameMultiplier : Math.min(baseBulletSpeed * difficultyMultiplier, 4);\n  const fireRate = type === \"fire\" ? 800 : Math.max(baseFireRate / difficultyMultiplier, 800);\n  const moveSpeed = type === \"fire\" ? 5 * frameMultiplier : Math.min(baseMoveSpeed * difficultyMultiplier, 1.5);\n\n  const enemyKeys = Object.keys(imageCache.enemies);\n  const fireKeys = Object.keys(imageCache.fire);\n\n  let characterImage;\n  if (type === \"fire\" && fireKeys.length > 0) {\n    characterImage = imageCache.fire[0];\n  } else if (enemyKeys.length > 0) {\n    const randomKey = enemyKeys[Math.floor(Math.random() * enemyKeys.length)];\n    characterImage = imageCache.enemies[randomKey];\n  }\n\n  if (!characterImage) {\n    console.error(\"Can't get image for monanimal type:\", type);\n  }\n\n  const bulletColor = type === \"fire\" ? \"orange\" : ENEMY_COLORS[Math.floor(Math.random() * ENEMY_COLORS.length)];\n\n  const spawnTime = firstPlayer ? Date.now() + 3000 : Date.now();\n  \n  enemiesRef.push(new Enemy(randomX, randomY, bulletSpeed, fireRate, moveSpeed, bulletColor, spawnTime, type, characterImage));\n  \n  return enemiesRef;\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,MAAM,QAAQ,aAAa;AAEpC,MAAMC,YAAY,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAElG,eAAe,SAASC,WAAWA,CAACC,UAAU,EAAEC,UAAkB,EAAEC,WAAoB,EAAEC,IAAY,EAAEC,eAAuB,EAAEC,UAAe,EAAE;EAChJ,IAAIL,UAAU,CAACM,MAAM,IAAIT,MAAM,CAACU,WAAW,EAAE;IAC3C,OAAOP,UAAU;EACnB;EAEA,MAAMQ,OAAO,GAAG,GAAG;EACnB,MAAMC,OAAO,GAAGD,OAAO,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC,IAAId,MAAM,CAACe,YAAY,GAAGJ,OAAO,GAAG,CAAC,CAAC;EAC7E,MAAMK,OAAO,GAAGL,OAAO,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC,IAAId,MAAM,CAACiB,aAAa,GAAGN,OAAO,GAAG,CAAC,CAAC;EAE9E,IAAIO,oBAAoB,GAAGL,IAAI,CAACM,GAAG,CAAC,CAAC,GAAGf,UAAU,GAAG,GAAG,EAAE,GAAG,CAAC;EAE9D,MAAMgB,eAAe,GAAG,CAAE,GAAG,GAAGP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAKP,eAAe;EACrE,MAAMc,YAAY,GAAG,IAAI,GAAGR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI;EAChD,MAAMQ,aAAa,GAAG,CAAE,GAAG,GAAGT,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAIP,eAAe;EAEpE,MAAMgB,WAAW,GAAGjB,IAAI,KAAK,MAAM,GAAG,CAAC,GAAGC,eAAe,GAAGM,IAAI,CAACM,GAAG,CAACC,eAAe,GAAGF,oBAAoB,EAAE,CAAC,CAAC;EAC/G,MAAMM,QAAQ,GAAGlB,IAAI,KAAK,MAAM,GAAG,GAAG,GAAGO,IAAI,CAACY,GAAG,CAACJ,YAAY,GAAGH,oBAAoB,EAAE,GAAG,CAAC;EAC3F,MAAMQ,SAAS,GAAGpB,IAAI,KAAK,MAAM,GAAG,CAAC,GAAGC,eAAe,GAAGM,IAAI,CAACM,GAAG,CAACG,aAAa,GAAGJ,oBAAoB,EAAE,GAAG,CAAC;EAE7G,MAAMS,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACrB,UAAU,CAACsB,OAAO,CAAC;EACjD,MAAMC,QAAQ,GAAGH,MAAM,CAACC,IAAI,CAACrB,UAAU,CAACwB,IAAI,CAAC;EAE7C,IAAIC,cAAc;EAClB,IAAI3B,IAAI,KAAK,MAAM,IAAIyB,QAAQ,CAACtB,MAAM,GAAG,CAAC,EAAE;IAC1CwB,cAAc,GAAGzB,UAAU,CAACwB,IAAI,CAAC,CAAC,CAAC;EACrC,CAAC,MAAM,IAAIL,SAAS,CAAClB,MAAM,GAAG,CAAC,EAAE;IAC/B,MAAMyB,SAAS,GAAGP,SAAS,CAACd,IAAI,CAACsB,KAAK,CAACtB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGa,SAAS,CAAClB,MAAM,CAAC,CAAC;IACzEwB,cAAc,GAAGzB,UAAU,CAACsB,OAAO,CAACI,SAAS,CAAC;EAChD;EAEA,IAAI,CAACD,cAAc,EAAE;IACnBG,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAE/B,IAAI,CAAC;EAC5D;EAEA,MAAMgC,WAAW,GAAGhC,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAGL,YAAY,CAACY,IAAI,CAACsB,KAAK,CAACtB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGb,YAAY,CAACQ,MAAM,CAAC,CAAC;EAE9G,MAAM8B,SAAS,GAAGlC,WAAW,GAAGmC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;EAE9DtC,UAAU,CAACuC,IAAI,CAAC,IAAI3C,KAAK,CAACa,OAAO,EAAEI,OAAO,EAAEO,WAAW,EAAEC,QAAQ,EAAEE,SAAS,EAAEY,WAAW,EAAEC,SAAS,EAAEjC,IAAI,EAAE2B,cAAc,CAAC,CAAC;EAE5H,OAAO9B,UAAU;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}