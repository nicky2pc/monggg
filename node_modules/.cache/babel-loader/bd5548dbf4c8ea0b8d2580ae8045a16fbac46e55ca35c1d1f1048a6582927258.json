{"ast":null,"code":"import { AddFrame, SignIn, createSolanaWalletProvider } from '@farcaster/frame-core';\nimport { EventEmitter } from 'eventemitter3';\nimport { frameHost } from './frameHost';\nimport { provider } from './provider';\nexport function createEmitter() {\n  const emitter = new EventEmitter();\n  return {\n    get eventNames() {\n      return emitter.eventNames.bind(emitter);\n    },\n    get listenerCount() {\n      return emitter.listenerCount.bind(emitter);\n    },\n    get listeners() {\n      return emitter.listeners.bind(emitter);\n    },\n    addListener: emitter.addListener.bind(emitter),\n    emit: emitter.emit.bind(emitter),\n    off: emitter.off.bind(emitter),\n    on: emitter.on.bind(emitter),\n    once: emitter.once.bind(emitter),\n    removeAllListeners: emitter.removeAllListeners.bind(emitter),\n    removeListener: emitter.removeListener.bind(emitter)\n  };\n}\nconst emitter = createEmitter();\nlet cachedIsInMiniAppResult = null;\n/**\n * Determines if the current environment is a MiniApp context.\n *\n * @param timeoutMs - Optional timeout in milliseconds (default: 50)\n * @returns Promise resolving to boolean indicating if in MiniApp context\n */\nasync function isInMiniApp() {\n  let timeoutMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n  // Return cached result if we've already determined we are in a MiniApp\n  if (cachedIsInMiniAppResult === true) {\n    return true;\n  }\n  // Check for SSR environment - definitely not a MiniApp\n  if (typeof window === 'undefined') {\n    return false;\n  }\n  // Short-circuit: definitely NOT a MiniApp\n  if (!window.ReactNativeWebView && window === window.parent) {\n    return false;\n  }\n  // At this point, we MIGHT be in a MiniApp (iframe or RN WebView)\n  // but need to verify by checking for context communication.\n  const isInMiniApp = await Promise.race([frameHost.context.then(context => !!context),\n  // Check if context resolves to truthy\n  new Promise(resolve => {\n    setTimeout(() => resolve(false), timeoutMs); // Timeout resolves to false\n  })]).catch(() => {\n    return false;\n  });\n  // Cache the result ONLY if true (we are confirmed to be in a MiniApp)\n  if (isInMiniApp) {\n    cachedIsInMiniAppResult = true;\n  }\n  return isInMiniApp;\n}\nexport const sdk = {\n  ...emitter,\n  isInMiniApp,\n  context: frameHost.context,\n  actions: {\n    setPrimaryButton: frameHost.setPrimaryButton.bind(frameHost),\n    ready: frameHost.ready.bind(frameHost),\n    close: frameHost.close.bind(frameHost),\n    viewProfile: frameHost.viewProfile.bind(frameHost),\n    signIn: async options => {\n      const response = await frameHost.signIn(options);\n      if (response.result) {\n        return response.result;\n      }\n      if (response.error.type === 'rejected_by_user') {\n        throw new SignIn.RejectedByUser();\n      }\n      throw new Error('Unreachable');\n    },\n    openUrl: urlArg => {\n      const url = typeof urlArg === 'string' ? urlArg : urlArg.url;\n      return frameHost.openUrl(url.trim());\n    },\n    addFrame: async () => {\n      const response = await frameHost.addFrame();\n      if (response.result) {\n        return response.result;\n      }\n      if (response.error.type === 'invalid_domain_manifest') {\n        throw new AddFrame.InvalidDomainManifest();\n      }\n      if (response.error.type === 'rejected_by_user') {\n        throw new AddFrame.RejectedByUser();\n      }\n      throw new Error('Unreachable');\n    },\n    composeCast() {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return frameHost.composeCast(options);\n    }\n  },\n  experimental: {\n    viewToken: frameHost.viewToken.bind(frameHost),\n    sendToken: frameHost.sendToken.bind(frameHost),\n    swapToken: frameHost.swapToken.bind(frameHost),\n    solanaProvider: frameHost.solanaProviderRequest ? createSolanaWalletProvider(frameHost.solanaProviderRequest) : undefined\n  },\n  wallet: {\n    ethProvider: provider\n  }\n};\n// Required to pass SSR\nif (typeof document !== 'undefined') {\n  // react native webview events\n  document.addEventListener('FarcasterFrameEvent', event => {\n    if (event instanceof MessageEvent) {\n      const frameEvent = event.data;\n      if (frameEvent.event === 'primary_button_clicked') {\n        emitter.emit('primaryButtonClicked');\n      } else if (frameEvent.event === 'frame_added') {\n        emitter.emit('frameAdded', {\n          notificationDetails: frameEvent.notificationDetails\n        });\n      } else if (frameEvent.event === 'frame_add_rejected') {\n        emitter.emit('frameAddRejected', {\n          reason: frameEvent.reason\n        });\n      } else if (frameEvent.event === 'frame_removed') {\n        emitter.emit('frameRemoved');\n      } else if (frameEvent.event === 'notifications_enabled') {\n        emitter.emit('notificationsEnabled', {\n          notificationDetails: frameEvent.notificationDetails\n        });\n      } else if (frameEvent.event === 'notifications_disabled') {\n        emitter.emit('notificationsDisabled');\n      }\n    }\n  });\n}\n// Required to pass SSR\nif (typeof window !== 'undefined') {\n  // web events\n  window.addEventListener('message', event => {\n    if (event instanceof MessageEvent) {\n      if (event.data.type === 'frameEvent') {\n        const frameEvent = event.data.event;\n        if (frameEvent.event === 'primary_button_clicked') {\n          emitter.emit('primaryButtonClicked');\n        } else if (frameEvent.event === 'frame_added') {\n          emitter.emit('frameAdded', {\n            notificationDetails: frameEvent.notificationDetails\n          });\n        } else if (frameEvent.event === 'frame_add_rejected') {\n          emitter.emit('frameAddRejected', {\n            reason: frameEvent.reason\n          });\n        } else if (frameEvent.event === 'frame_removed') {\n          emitter.emit('frameRemoved');\n        } else if (frameEvent.event === 'notifications_enabled') {\n          emitter.emit('notificationsEnabled', {\n            notificationDetails: frameEvent.notificationDetails\n          });\n        } else if (frameEvent.event === 'notifications_disabled') {\n          emitter.emit('notificationsDisabled');\n        }\n      }\n    }\n  });\n}","map":{"version":3,"names":["AddFrame","SignIn","createSolanaWalletProvider","EventEmitter","frameHost","provider","createEmitter","emitter","eventNames","bind","listenerCount","listeners","addListener","emit","off","on","once","removeAllListeners","removeListener","cachedIsInMiniAppResult","isInMiniApp","timeoutMs","arguments","length","undefined","window","ReactNativeWebView","parent","Promise","race","context","then","resolve","setTimeout","catch","sdk","actions","setPrimaryButton","ready","close","viewProfile","signIn","options","response","result","error","type","RejectedByUser","Error","openUrl","urlArg","url","trim","addFrame","InvalidDomainManifest","composeCast","experimental","viewToken","sendToken","swapToken","solanaProvider","solanaProviderRequest","wallet","ethProvider","document","addEventListener","event","MessageEvent","frameEvent","data","notificationDetails","reason"],"sources":["/home/nick/Desktop/Monagaynanimas_Neynar/node_modules/@farcaster/frame-sdk/dist/sdk.js"],"sourcesContent":["import { AddFrame, SignIn, createSolanaWalletProvider, } from '@farcaster/frame-core';\nimport { EventEmitter } from 'eventemitter3';\nimport { frameHost } from './frameHost';\nimport { provider } from './provider';\nexport function createEmitter() {\n    const emitter = new EventEmitter();\n    return {\n        get eventNames() {\n            return emitter.eventNames.bind(emitter);\n        },\n        get listenerCount() {\n            return emitter.listenerCount.bind(emitter);\n        },\n        get listeners() {\n            return emitter.listeners.bind(emitter);\n        },\n        addListener: emitter.addListener.bind(emitter),\n        emit: emitter.emit.bind(emitter),\n        off: emitter.off.bind(emitter),\n        on: emitter.on.bind(emitter),\n        once: emitter.once.bind(emitter),\n        removeAllListeners: emitter.removeAllListeners.bind(emitter),\n        removeListener: emitter.removeListener.bind(emitter),\n    };\n}\nconst emitter = createEmitter();\nlet cachedIsInMiniAppResult = null;\n/**\n * Determines if the current environment is a MiniApp context.\n *\n * @param timeoutMs - Optional timeout in milliseconds (default: 50)\n * @returns Promise resolving to boolean indicating if in MiniApp context\n */\nasync function isInMiniApp(timeoutMs = 50) {\n    // Return cached result if we've already determined we are in a MiniApp\n    if (cachedIsInMiniAppResult === true) {\n        return true;\n    }\n    // Check for SSR environment - definitely not a MiniApp\n    if (typeof window === 'undefined') {\n        return false;\n    }\n    // Short-circuit: definitely NOT a MiniApp\n    if (!window.ReactNativeWebView && window === window.parent) {\n        return false;\n    }\n    // At this point, we MIGHT be in a MiniApp (iframe or RN WebView)\n    // but need to verify by checking for context communication.\n    const isInMiniApp = await Promise.race([\n        frameHost.context.then((context) => !!context), // Check if context resolves to truthy\n        new Promise((resolve) => {\n            setTimeout(() => resolve(false), timeoutMs); // Timeout resolves to false\n        }),\n    ]).catch(() => {\n        return false;\n    });\n    // Cache the result ONLY if true (we are confirmed to be in a MiniApp)\n    if (isInMiniApp) {\n        cachedIsInMiniAppResult = true;\n    }\n    return isInMiniApp;\n}\nexport const sdk = {\n    ...emitter,\n    isInMiniApp,\n    context: frameHost.context,\n    actions: {\n        setPrimaryButton: frameHost.setPrimaryButton.bind(frameHost),\n        ready: frameHost.ready.bind(frameHost),\n        close: frameHost.close.bind(frameHost),\n        viewProfile: frameHost.viewProfile.bind(frameHost),\n        signIn: async (options) => {\n            const response = await frameHost.signIn(options);\n            if (response.result) {\n                return response.result;\n            }\n            if (response.error.type === 'rejected_by_user') {\n                throw new SignIn.RejectedByUser();\n            }\n            throw new Error('Unreachable');\n        },\n        openUrl: (urlArg) => {\n            const url = typeof urlArg === 'string' ? urlArg : urlArg.url;\n            return frameHost.openUrl(url.trim());\n        },\n        addFrame: async () => {\n            const response = await frameHost.addFrame();\n            if (response.result) {\n                return response.result;\n            }\n            if (response.error.type === 'invalid_domain_manifest') {\n                throw new AddFrame.InvalidDomainManifest();\n            }\n            if (response.error.type === 'rejected_by_user') {\n                throw new AddFrame.RejectedByUser();\n            }\n            throw new Error('Unreachable');\n        },\n        composeCast(options = {}) {\n            return frameHost.composeCast(options);\n        },\n    },\n    experimental: {\n        viewToken: frameHost.viewToken.bind(frameHost),\n        sendToken: frameHost.sendToken.bind(frameHost),\n        swapToken: frameHost.swapToken.bind(frameHost),\n        solanaProvider: frameHost.solanaProviderRequest\n            ? createSolanaWalletProvider(frameHost.solanaProviderRequest)\n            : undefined,\n    },\n    wallet: {\n        ethProvider: provider,\n    },\n};\n// Required to pass SSR\nif (typeof document !== 'undefined') {\n    // react native webview events\n    document.addEventListener('FarcasterFrameEvent', (event) => {\n        if (event instanceof MessageEvent) {\n            const frameEvent = event.data;\n            if (frameEvent.event === 'primary_button_clicked') {\n                emitter.emit('primaryButtonClicked');\n            }\n            else if (frameEvent.event === 'frame_added') {\n                emitter.emit('frameAdded', {\n                    notificationDetails: frameEvent.notificationDetails,\n                });\n            }\n            else if (frameEvent.event === 'frame_add_rejected') {\n                emitter.emit('frameAddRejected', { reason: frameEvent.reason });\n            }\n            else if (frameEvent.event === 'frame_removed') {\n                emitter.emit('frameRemoved');\n            }\n            else if (frameEvent.event === 'notifications_enabled') {\n                emitter.emit('notificationsEnabled', {\n                    notificationDetails: frameEvent.notificationDetails,\n                });\n            }\n            else if (frameEvent.event === 'notifications_disabled') {\n                emitter.emit('notificationsDisabled');\n            }\n        }\n    });\n}\n// Required to pass SSR\nif (typeof window !== 'undefined') {\n    // web events\n    window.addEventListener('message', (event) => {\n        if (event instanceof MessageEvent) {\n            if (event.data.type === 'frameEvent') {\n                const frameEvent = event.data.event;\n                if (frameEvent.event === 'primary_button_clicked') {\n                    emitter.emit('primaryButtonClicked');\n                }\n                else if (frameEvent.event === 'frame_added') {\n                    emitter.emit('frameAdded', {\n                        notificationDetails: frameEvent.notificationDetails,\n                    });\n                }\n                else if (frameEvent.event === 'frame_add_rejected') {\n                    emitter.emit('frameAddRejected', { reason: frameEvent.reason });\n                }\n                else if (frameEvent.event === 'frame_removed') {\n                    emitter.emit('frameRemoved');\n                }\n                else if (frameEvent.event === 'notifications_enabled') {\n                    emitter.emit('notificationsEnabled', {\n                        notificationDetails: frameEvent.notificationDetails,\n                    });\n                }\n                else if (frameEvent.event === 'notifications_disabled') {\n                    emitter.emit('notificationsDisabled');\n                }\n            }\n        }\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}