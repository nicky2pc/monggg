{"ast":null,"code":"import{useState,useEffect}from'react';import{CONFIG}from'../game/config.ts';export const useTransactions=()=>{const[transactions,setTransactions]=useState(()=>{const savedTransactions=localStorage.getItem(\"transactions\");if(!savedTransactions)return[];let parsedTransactions=JSON.parse(savedTransactions);parsedTransactions=parsedTransactions.map(tx=>!tx.link||tx.link===\"Pending...\"?{...tx,link:\"Not processed\"}:tx);localStorage.setItem(\"transactions\",JSON.stringify(parsedTransactions));return parsedTransactions;});useEffect(()=>{localStorage.setItem(\"transactions\",JSON.stringify(transactions));},[transactions]);const updateTransactions=(transaction,callback)=>{const{id,type}=transaction;setTransactions(prev=>{const updated=[transaction,...prev];if(updated.length>CONFIG.MAX_TRANSACTIONS){updated.length=CONFIG.MAX_TRANSACTIONS;}localStorage.setItem(\"transactions\",JSON.stringify(updated));return updated;});callback().then(data=>{setTransactions(prev=>{const updatedTransactions=prev.map(tx=>tx.id===id&&tx.type===type?{...tx,link:(data===null||data===void 0?void 0:data.url)||\"Error\",date:Date.now()}:tx);localStorage.setItem(\"transactions\",JSON.stringify(updatedTransactions));return updatedTransactions;});}).catch(()=>{setTransactions(prev=>{const updatedTransactions=prev.map(tx=>tx.id===id&&tx.type===type?{...tx,link:\"Error\",date:Date.now()}:tx);localStorage.setItem(\"transactions\",JSON.stringify(updatedTransactions));return updatedTransactions;});});};const handleMint=killCount=>{const transaction={id:Date.now(),type:`Mint: ${killCount}`,link:\"Pending...\",date:Date.now()};updateTransactions(transaction,()=>import('../game/utils.ts').then(m=>m.mint()));};const handleTotalScore=function(score){let isDead=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const transaction={id:Date.now(),type:isDead?`Death: ${score}`:`Kill: ${score}`,link:\"Pending...\",date:Date.now()};updateTransactions(transaction,()=>import('../game/utils.ts').then(m=>m.sendTransaction(score,isDead)));};return{transactions,handleMint,handleTotalScore};};","map":{"version":3,"names":["useState","useEffect","CONFIG","useTransactions","transactions","setTransactions","savedTransactions","localStorage","getItem","parsedTransactions","JSON","parse","map","tx","link","setItem","stringify","updateTransactions","transaction","callback","id","type","prev","updated","length","MAX_TRANSACTIONS","then","data","updatedTransactions","url","date","Date","now","catch","handleMint","killCount","m","mint","handleTotalScore","score","isDead","arguments","undefined","sendTransaction"],"sources":["/home/nick/Desktop/Monagaynanimas_Neynar/src/hooks/useTransactions.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { CONFIG } from '../game/config.ts';\r\nimport { Transaction, UseTransactionsReturn, UpdateTransactionCallback, LeaderboardResponse } from '../types.ts';\r\n\r\nexport const useTransactions = (): UseTransactionsReturn => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>(() => {\r\n    const savedTransactions = localStorage.getItem(\"transactions\");\r\n    if (!savedTransactions) return [];\r\n  \r\n    let parsedTransactions = JSON.parse(savedTransactions);\r\n  \r\n    parsedTransactions = parsedTransactions.map(tx => \r\n      (!tx.link || tx.link === \"Pending...\") ? { ...tx, link: \"Not processed\" } : tx\r\n    );\r\n  \r\n    localStorage.setItem(\"transactions\", JSON.stringify(parsedTransactions));\r\n    return parsedTransactions;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n  }, [transactions]);\r\n\r\n  const updateTransactions = (transaction: Transaction, callback: UpdateTransactionCallback) => {\r\n    const { id, type } = transaction;\r\n    \r\n    setTransactions(prev => {\r\n      const updated = [transaction, ...prev];\r\n      if (updated.length > CONFIG.MAX_TRANSACTIONS) {\r\n        updated.length = CONFIG.MAX_TRANSACTIONS;\r\n      }\r\n      localStorage.setItem(\"transactions\", JSON.stringify(updated));\r\n      return updated;\r\n    });\r\n\r\n    callback()\r\n      .then((data: LeaderboardResponse) => {\r\n        setTransactions(prev => {\r\n          const updatedTransactions = prev.map(tx =>\r\n            tx.id === id && tx.type === type\r\n              ? { ...tx, link: data?.url || \"Error\", date: Date.now() }\r\n              : tx\r\n          );\r\n          localStorage.setItem(\"transactions\", JSON.stringify(updatedTransactions));\r\n          return updatedTransactions;\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setTransactions(prev => {\r\n          const updatedTransactions = prev.map(tx =>\r\n            tx.id === id && tx.type === type\r\n              ? { ...tx, link: \"Error\", date: Date.now() }\r\n              : tx\r\n          );\r\n          localStorage.setItem(\"transactions\", JSON.stringify(updatedTransactions));\r\n          return updatedTransactions;\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleMint = (killCount: number) => {\r\n    const transaction: Transaction = {\r\n      id: Date.now(),\r\n      type: `Mint: ${killCount}`,\r\n      link: \"Pending...\",\r\n      date: Date.now()\r\n    };\r\n\r\n    updateTransactions(transaction, () => import('../game/utils.ts').then(m => m.mint()));\r\n  };\r\n\r\n  const handleTotalScore = (score: number, isDead = false) => {\r\n    const transaction: Transaction = {\r\n      id: Date.now(),\r\n      type: isDead ? `Death: ${score}` : `Kill: ${score}`,\r\n      link: \"Pending...\",\r\n      date: Date.now()\r\n    };\r\n\r\n    updateTransactions(transaction, () => \r\n      import('../game/utils.ts').then(m => m.sendTransaction(score, isDead))\r\n    );\r\n  };\r\n\r\n  return {\r\n    transactions,\r\n    handleMint,\r\n    handleTotalScore\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}