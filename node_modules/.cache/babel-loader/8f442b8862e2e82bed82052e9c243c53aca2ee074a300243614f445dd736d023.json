{"ast":null,"code":"import { windowEndpoint } from 'comlink';\nconst mockEndpoint = {\n  postMessage() {\n    // noop\n  },\n  addEventListener: () => {\n    // noop\n  },\n  removeEventListener: () => {\n    // noop\n  }\n};\nconst webViewEndpoint = {\n  postMessage: data => {\n    console.debug('[webview:req]', data);\n    window.ReactNativeWebView.postMessage(JSON.stringify(data));\n  },\n  addEventListener: (_, listener, ...args) => {\n    document.addEventListener('FarcasterFrameCallback', listener, ...args);\n  },\n  removeEventListener: (_, listener) => {\n    document.removeEventListener('FarcasterFrameCallback', listener);\n  }\n};\nexport const endpoint = (() => {\n  // No actions are actually gonna take place during SSR, thus it's safe to return mocked endpoint\n  if (typeof window === 'undefined') return mockEndpoint;\n  return window?.ReactNativeWebView ? webViewEndpoint : windowEndpoint(window?.parent ?? window);\n})();","map":{"version":3,"names":["windowEndpoint","mockEndpoint","postMessage","addEventListener","removeEventListener","webViewEndpoint","data","console","debug","window","ReactNativeWebView","JSON","stringify","_","listener","args","document","endpoint","parent"],"sources":["/home/nick/Desktop/Monagaynanimas_Neynar/node_modules/@farcaster/frame-sdk/dist/endpoint.js"],"sourcesContent":["import { windowEndpoint } from 'comlink';\nconst mockEndpoint = {\n    postMessage() {\n        // noop\n    },\n    addEventListener: () => {\n        // noop\n    },\n    removeEventListener: () => {\n        // noop\n    },\n};\nconst webViewEndpoint = {\n    postMessage: (data) => {\n        console.debug('[webview:req]', data);\n        window.ReactNativeWebView.postMessage(JSON.stringify(data));\n    },\n    addEventListener: (_, listener, ...args) => {\n        document.addEventListener('FarcasterFrameCallback', listener, ...args);\n    },\n    removeEventListener: (_, listener) => {\n        document.removeEventListener('FarcasterFrameCallback', listener);\n    },\n};\nexport const endpoint = (() => {\n    // No actions are actually gonna take place during SSR, thus it's safe to return mocked endpoint\n    if (typeof window === 'undefined')\n        return mockEndpoint;\n    return window?.ReactNativeWebView\n        ? webViewEndpoint\n        : windowEndpoint(window?.parent ?? window);\n})();\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,SAAS;AACxC,MAAMC,YAAY,GAAG;EACjBC,WAAWA,CAAA,EAAG;IACV;EAAA,CACH;EACDC,gBAAgB,EAAEA,CAAA,KAAM;IACpB;EAAA,CACH;EACDC,mBAAmB,EAAEA,CAAA,KAAM;IACvB;EAAA;AAER,CAAC;AACD,MAAMC,eAAe,GAAG;EACpBH,WAAW,EAAGI,IAAI,IAAK;IACnBC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,IAAI,CAAC;IACpCG,MAAM,CAACC,kBAAkB,CAACR,WAAW,CAACS,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EAC/D,CAAC;EACDH,gBAAgB,EAAEA,CAACU,CAAC,EAAEC,QAAQ,EAAE,GAAGC,IAAI,KAAK;IACxCC,QAAQ,CAACb,gBAAgB,CAAC,wBAAwB,EAAEW,QAAQ,EAAE,GAAGC,IAAI,CAAC;EAC1E,CAAC;EACDX,mBAAmB,EAAEA,CAACS,CAAC,EAAEC,QAAQ,KAAK;IAClCE,QAAQ,CAACZ,mBAAmB,CAAC,wBAAwB,EAAEU,QAAQ,CAAC;EACpE;AACJ,CAAC;AACD,OAAO,MAAMG,QAAQ,GAAG,CAAC,MAAM;EAC3B;EACA,IAAI,OAAOR,MAAM,KAAK,WAAW,EAC7B,OAAOR,YAAY;EACvB,OAAOQ,MAAM,EAAEC,kBAAkB,GAC3BL,eAAe,GACfL,cAAc,CAACS,MAAM,EAAES,MAAM,IAAIT,MAAM,CAAC;AAClD,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}