{"ast":null,"code":"import { Mondalak } from './Mondalak.ts';\nimport { CONFIG } from '../config.ts';\nexport class Enemy extends Mondalak {\n  constructor(x, y, bulletSpeed = CONFIG.BULLET_SPEED, fireRate = CONFIG.FIRE_RATE, moveSpeed = 1.5, bulletColor, spawnTime, type, characterImage) {\n    super(x, y, false, bulletSpeed, fireRate, bulletColor, type, characterImage);\n    this.targetX = void 0;\n    this.targetY = void 0;\n    this.moveCooldown = void 0;\n    this.moveSpeed = void 0;\n    this.spawnTime = void 0;\n    this.lastUpdateTime = void 0;\n    this.targetX = x;\n    this.targetY = y;\n    this.moveCooldown = Date.now() + this.getRandomCooldown();\n    this.moveSpeed = moveSpeed;\n    this.spawnTime = spawnTime;\n    this.type = type;\n    this.lastUpdateTime = performance.now();\n  }\n  updateAI(playerX, playerY) {\n    const dx = playerX - this.x;\n    const dy = playerY - this.y;\n    this.angle = Math.atan2(dy, dx);\n    if (Date.now() > this.moveCooldown) {\n      this.targetX = this.x + (Math.random() - 0.5) * 400;\n      this.targetY = this.y + (Math.random() - 0.5) * 400;\n      this.moveCooldown = Date.now() + this.getRandomCooldown();\n      this.targetX = Math.max(45, Math.min(CONFIG.CANVAS_WIDTH - 45, this.targetX));\n      this.targetY = Math.max(45, Math.min(CONFIG.CANVAS_HEIGHT - 45, this.targetY));\n    }\n    const lerpFactor = this.moveSpeed * 0.01;\n    this.x = this.lerp(this.x, this.targetX, lerpFactor);\n    this.y = this.lerp(this.y, this.targetY, lerpFactor);\n    this.x = Math.max(45, Math.min(CONFIG.CANVAS_WIDTH - 45, this.x));\n    this.y = Math.max(45, Math.min(CONFIG.CANVAS_HEIGHT - 45, this.y));\n    if (Date.now() - this.lastShot > this.fireRate && Date.now() - 700 > this.spawnTime) {\n      return this.shoot();\n    }\n    return null;\n  }\n  lerp(start, end, factor) {\n    const clampedFactor = Math.min(1.0, Math.max(0.0, factor));\n    return start + (end - start) * clampedFactor;\n  }\n  getRandomCooldown() {\n    return Math.floor(Math.random() * (1600 - 600) + 600);\n  }\n}","map":{"version":3,"names":["Mondalak","CONFIG","Enemy","constructor","x","y","bulletSpeed","BULLET_SPEED","fireRate","FIRE_RATE","moveSpeed","bulletColor","spawnTime","type","characterImage","targetX","targetY","moveCooldown","lastUpdateTime","Date","now","getRandomCooldown","performance","updateAI","playerX","playerY","dx","dy","angle","Math","atan2","random","max","min","CANVAS_WIDTH","CANVAS_HEIGHT","lerpFactor","lerp","lastShot","shoot","start","end","factor","clampedFactor","floor"],"sources":["/home/nick/Desktop/Monagaynanimas/src/game/classes/Enemy.ts"],"sourcesContent":["import { Mondalak } from './Mondalak.ts';\nimport { CONFIG } from '../config.ts';\nimport { Bullet } from './Bullet.ts';\n\nexport class Enemy extends Mondalak {\n  targetX: number;\n  targetY: number;\n  moveCooldown: number;\n  moveSpeed: number;\n  spawnTime: number;\n  lastUpdateTime: number;\n  \n  constructor(x: number, y: number, bulletSpeed: number = CONFIG.BULLET_SPEED, fireRate: number = CONFIG.FIRE_RATE, moveSpeed: number = 1.5, bulletColor: string, spawnTime: number, type: string, characterImage: HTMLImageElement) {\n    super(x, y, false, bulletSpeed, fireRate, bulletColor, type, characterImage);\n    this.targetX = x;\n    this.targetY = y;\n    this.moveCooldown = Date.now() + this.getRandomCooldown(); \n    this.moveSpeed = moveSpeed;\n    this.spawnTime = spawnTime;\n    this.type = type;\n    this.lastUpdateTime = performance.now();\n  }\n\n  updateAI(playerX: number, playerY: number): Bullet | null {\n    const dx = playerX - this.x;\n    const dy = playerY - this.y;\n    this.angle = Math.atan2(dy, dx);\n\n    if (Date.now() > this.moveCooldown) {\n      this.targetX = this.x + (Math.random() - 0.5) * 400;\n      this.targetY = this.y + (Math.random() - 0.5) * 400;\n      this.moveCooldown = Date.now() + this.getRandomCooldown();\n\n      this.targetX = Math.max(45, Math.min(CONFIG.CANVAS_WIDTH - 45, this.targetX));\n      this.targetY = Math.max(45, Math.min(CONFIG.CANVAS_HEIGHT - 45, this.targetY));\n    }\n\n    const lerpFactor = this.moveSpeed * 0.01; \n    this.x = this.lerp(this.x, this.targetX, lerpFactor);\n    this.y = this.lerp(this.y, this.targetY, lerpFactor);\n\n    this.x = Math.max(45, Math.min(CONFIG.CANVAS_WIDTH - 45, this.x));\n    this.y = Math.max(45, Math.min(CONFIG.CANVAS_HEIGHT - 45, this.y));\n\n    if ((Date.now() - this.lastShot > this.fireRate) && (Date.now() - 700 > this.spawnTime)) {\n      return this.shoot();\n    }\n\n    return null;\n  }\n\n  private lerp(start: number, end: number, factor: number): number {\n    const clampedFactor = Math.min(1.0, Math.max(0.0, factor));\n    return start + (end - start) * clampedFactor;\n  }\n\n  private getRandomCooldown(): number {\n    return Math.floor(Math.random() * (1600 - 600) + 600);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}