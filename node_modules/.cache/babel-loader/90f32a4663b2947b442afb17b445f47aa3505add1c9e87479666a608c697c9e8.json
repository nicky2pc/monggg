{"ast":null,"code":"var _jsxFileName = \"/home/nick/Desktop/Monagaynanimas_Neynar/src/components/Game/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { CONFIG } from '../../game/config.ts';\nimport { Mondalak } from '../../game/classes/Mondalak.ts';\nimport { Bullet } from '../../game/classes/Bullet.ts';\nimport { Heart } from '../../game/classes/Heart.ts';\nimport { Buff } from '../../game/classes/Heart.ts';\nimport createEnemy from '../../game/createEnemy.ts';\nimport { loadSounds, playRandomSound, playSound, getLeaderBoard } from '../../game/utils.ts';\nimport { useFrameMultiplier } from '../../providers/FrameMultiplierProvider.tsx';\nimport { useTransactions } from '../../hooks/useTransactions.ts';\nimport LeaderboardPopup from '../LeaderboardPopup/LeaderboardPopup.tsx';\nimport TransactionsTable from '../TransactionsTable/TransactionsTable.tsx';\nimport GameUI from '../GameUI/GameUI.tsx';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  var _canvasRef$current2, _canvasRef$current3;\n  const canvasRef = useRef(null);\n  const explosions = useRef([]);\n  const enemies = useRef([]);\n  const playerTank = useRef(null);\n  const bullets = useRef([]);\n  const isDead = useRef(false);\n  const audioPool = useRef([]);\n  const hearts = useRef([]);\n  const buffs = useRef([]);\n  const killCountRef = useRef(0);\n  const totalScoreRef = useRef(0);\n  const countdownRef = useRef(false);\n  const isSoundOn = useRef(true);\n  const buffTimerRef = useRef(null);\n  const frameMultiplier = useFrameMultiplier();\n  const {\n    transactions,\n    handleMint,\n    handleTotalScore\n  } = useTransactions();\n  const imageCache = {\n    enemies: {},\n    fire: {},\n    player: {}\n  };\n  const imageCacheRef = useRef({\n    enemies: {},\n    fire: {},\n    player: {}\n  });\n  const [assetsLoaded, setAssetsLoaded] = useState(false);\n  const [gameState, setGameState] = useState('menu');\n  const [sounds, setSounds] = useState(null);\n  const [soundBtnLabelOn, setSoundBtnLabelOn] = useState(true);\n  const [countdownValue, setCountdownValue] = useState(3);\n  const [buffTimerValue, setBuffTimerValue] = useState(0);\n  const [isStartButtonDisabled, setIsStartButtonDisabled] = useState(true);\n  const [gameStat, setGameStat] = useState({\n    totalScore: 0,\n    killCount: 0,\n    fireMondalakKillKount: 0,\n    damageTaken: 0,\n    damageGiven: 0,\n    healsUsed: 0,\n    buffsTaken: 0\n  });\n  const [isLeaderboardOpen, setIsLeaderboardOpen] = useState(false);\n  const updateGameStat = (key, value) => {\n    setGameStat(prev => ({\n      ...prev,\n      [key]: typeof value === \"function\" ? value(prev[key]) : value\n    }));\n  };\n  const [explosionFrames, setExplosionFrames] = useState([]);\n  const [isMobile, setIsMobile] = useState(false);\n  const bulletPoolRef = useRef([]);\n  const isUnsupportedBrowser = () => {\n    const ua = navigator.userAgent.toLowerCase();\n    return ua.includes(\"firefox\") || ua.includes(\"safari\") && !ua.includes(\"chrome\") || ua.includes(\"edg/\") && !ua.includes(\"chrome\") || ua.includes(\"tor\");\n  };\n  const startCountdown = () => {\n    setGameState('countdown');\n    countdownRef.current = true;\n    setCountdownValue(3);\n    let counter = 3;\n    const countdownInterval = setInterval(() => {\n      counter--;\n      setCountdownValue(counter);\n      if (counter <= 0) {\n        clearInterval(countdownInterval);\n        countdownRef.current = false;\n        setGameState('playing');\n      }\n    }, 1000);\n  };\n  const startBuffTimer = (number, playerTank) => {\n    if (!playerTank.current || gameState !== \"playing\") return;\n    setBuffTimerValue(number);\n    playerTank.current.isBuffed = true;\n    if (buffTimerRef.current) {\n      clearInterval(buffTimerRef.current);\n    }\n    let counter = number;\n    const buffCountDown = setInterval(() => {\n      counter--;\n      setBuffTimerValue(counter);\n      if (counter <= 0) {\n        clearInterval(buffCountDown);\n        buffTimerRef.current = null;\n        if (playerTank.current) {\n          playerTank.current.isBuffed = false;\n        }\n      }\n    }, 1000);\n    buffTimerRef.current = buffCountDown;\n  };\n  const preloadImages = async () => {\n    const imageCacheEnemies = {\n      \"default\": [\"/chars/10.svg\", \"/chars/11.svg\", \"/chars/12.svg\", \"/chars/13.svg\", \"/chars/14.svg\"]\n    };\n    const imageCacheFire = {\n      \"fire\": [\"/chars/8.svg\"]\n    };\n    const imageCachePlayer = {\n      \"main\": [\"/chars/15.svg\"]\n    };\n    const loadImage = src => {\n      return new Promise(resolve => {\n        const img = new Image();\n        img.src = src;\n        img.onload = () => resolve(img);\n      });\n    };\n    const enemyImages = await Promise.all(Object.entries(imageCacheEnemies).flatMap(([key, srcList]) => srcList.map(async (src, index) => {\n      const img = await loadImage(src);\n      imageCache.enemies[index] = img;\n    })));\n    const enemyFireImages = await Promise.all(Object.entries(imageCacheFire).flatMap(([key, srcList]) => srcList.map(async (src, index) => {\n      const img = await loadImage(src);\n      imageCache.fire[index] = img;\n    })));\n    const playerImages = await Promise.all(Object.entries(imageCachePlayer).flatMap(([key, srcList]) => srcList.map(async (src, index) => {\n      const img = await loadImage(src);\n      imageCache.player[index] = img;\n    })));\n    const explosionFramesArr = await Promise.all(Array.from({\n      length: 151 - 16 + 1\n    }, (_, i) => 16 + i).map(async i => {\n      const img = await loadImage(`/explotion/frame(${i}).png`);\n      return img;\n    }));\n    setExplosionFrames(explosionFramesArr);\n    imageCacheRef.current = imageCache;\n  };\n  const toggleSound = () => {\n    setSoundBtnLabelOn(!isSoundOn.current);\n    isSoundOn.current = !isSoundOn.current;\n  };\n  const resetGameObjects = () => {\n    playerTank.current = new Mondalak(canvasRef.current.width / 2, canvasRef.current.width / 2, true, CONFIG.BULLET_SPEED, CONFIG.FIRE_RATE, \"#c005c7\", \"main\", imageCacheRef.current.player[0]);\n    bullets.current = [];\n    hearts.current = [];\n    buffs.current = [];\n    buffTimerRef.current = null;\n    updateGameStat(\"killCount\", 0);\n    updateGameStat(\"fireMondalakKillKount\", 0);\n    updateGameStat(\"damageTaken\", 0);\n    updateGameStat(\"damageGiven\", 0);\n    updateGameStat(\"totalScore\", 0);\n    updateGameStat(\"healsUsed\", 0);\n    updateGameStat(\"buffsTaken\", 0);\n    setBuffTimerValue(0);\n    killCountRef.current = 0;\n    totalScoreRef.current = 0;\n    isDead.current = false;\n    audioPool.current.forEach(audio => {\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    audioPool.current = [];\n    if (gameState === \"countdown\") {\n      enemies.current = [];\n      spawnEnemies(0);\n    }\n    if (bulletPoolRef.current.length === 0) {\n      for (let i = 0; i < 50; i++) {\n        bulletPoolRef.current.push(new Bullet(0, 0, 0, 0, '', 0, false, 0, ''));\n      }\n    }\n  };\n  const spawnEnemies = killCount => {\n    if (!killCount) {\n      createEnemy(enemies.current, 1, true, \"default\", frameMultiplier, imageCacheRef.current);\n      return;\n    }\n    const maxEnemiesAllowed = Math.min(CONFIG.MAX_ENEMIES_BEGINNING + Math.floor(killCount / 10), CONFIG.MAX_ENEMIES);\n    if (enemies.current.length < maxEnemiesAllowed) {\n      const enemiesToSpawn = maxEnemiesAllowed - enemies.current.length;\n      for (let i = 0; i < enemiesToSpawn; i++) {\n        const spawnDelay = 150 + Math.random() * (430 - 150);\n        setTimeout(() => {\n          if (enemies.current.length < maxEnemiesAllowed) {\n            const enemyType = Math.random() < 0.05 ? \"fire\" : \"default\";\n            const difficulty = Math.min(Math.floor(killCount / 10), 10);\n            const adjustedDifficulty = enemyType === \"fire\" ? difficulty * 10 : difficulty;\n            enemies.current = createEnemy(enemies.current, adjustedDifficulty, false, enemyType, frameMultiplier, imageCacheRef.current);\n          }\n        }, spawnDelay);\n      }\n    }\n  };\n  const handleStopGame = () => {\n    const totalScore = totalScoreRef.current;\n    handleTotalScore(totalScore, true);\n    setGameState(\"menu\");\n    resetGameObjects();\n  };\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 1100px)\");\n    const handleResize = event => {\n      setIsMobile(event.matches);\n    };\n    setIsMobile(mediaQuery.matches);\n    mediaQuery.addEventListener(\"change\", handleResize);\n    console.log(frameMultiplier);\n    return () => mediaQuery.removeEventListener(\"change\", handleResize);\n  }, []);\n  useEffect(() => {\n    loadSounds().then(setSounds);\n    preloadImages().then(() => {\n      setAssetsLoaded(true);\n    });\n    document.body.style.overflow = 'hidden';\n    setTimeout(() => {\n      setIsStartButtonDisabled(false);\n      document.body.style.overflow = 'auto';\n    }, 1000);\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, []);\n  useEffect(() => {\n    if (gameState === 'playing' || gameState === 'menu') {\n      // Preload leaderboard data\n      getLeaderBoard().catch(error => console.error('Error getting leaderboard:', error));\n    }\n  }, [gameState]);\n  useEffect(() => {\n    if (gameState === \"playing\" || gameState === \"countdown\") {\n      if (assetsLoaded) {\n        resetGameObjects();\n      } else {\n        preloadImages().then(() => {\n          setAssetsLoaded(true);\n          resetGameObjects();\n        });\n      }\n    } else {\n      playerTank.current = null;\n      enemies.current = [];\n      bullets.current = [];\n    }\n  }, [gameState]);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n    canvasRef.current.width = CONFIG.CANVAS_WIDTH;\n    canvasRef.current.height = CONFIG.CANVAS_HEIGHT;\n    const keys = {\n      w: false,\n      a: false,\n      s: false,\n      d: false\n    };\n    const mouse = {\n      x: 0,\n      y: 0,\n      shooting: false\n    };\n    const keyHandler = (e, isKeyDown) => {\n      switch (e.key.toLowerCase()) {\n        case 'w':\n        case 'ц':\n          keys.w = isKeyDown;\n          break;\n        case 'a':\n        case 'ф':\n          keys.a = isKeyDown;\n          break;\n        case 's':\n        case 'ы':\n        case \"і\":\n          keys.s = isKeyDown;\n          break;\n        case 'd':\n        case 'в':\n          keys.d = isKeyDown;\n          break;\n      }\n    };\n    const getScale = () => {\n      const rect = canvasRef.current.getBoundingClientRect();\n      return rect.width / CONFIG.CANVAS_WIDTH;\n    };\n    const mouseMoveHandler = e => {\n      const scale = getScale();\n      const rect = canvasRef.current.getBoundingClientRect();\n      mouse.x = (e.clientX - rect.left) / scale;\n      mouse.y = (e.clientY - rect.top) / scale;\n    };\n    const killEnemy = (enemy, enemyIndex) => {\n      explosions.current.push({\n        x: enemy.x,\n        y: enemy.y,\n        frame: 16,\n        width: 100,\n        height: 96\n      });\n      enemies.current.splice(enemyIndex, 1);\n      setGameStat(prev => {\n        const newKillCount = prev.killCount + 1;\n        killCountRef.current = newKillCount;\n        totalScoreRef.current = prev.totalScore + (enemy.type === \"fire\" ? 3 : 1);\n        spawnEnemies(newKillCount);\n        return {\n          ...prev,\n          totalScore: prev.totalScore + (enemy.type === \"fire\" ? 3 : 1),\n          killCount: newKillCount,\n          fireMondalakKillKount: enemy.type === \"fire\" ? prev.fireMondalakKillKount + 1 : prev.fireMondalakKillKount\n        };\n      });\n      setTimeout(() => {\n        const totalScore = totalScoreRef.current;\n        handleTotalScore(totalScore, false);\n      }, 0);\n\n      // if (enemy.type === \"fire\") handleMint(killCountRef.current);\n\n      audioPool.current = playRandomSound(sounds, \"kill\", isSoundOn.current, audioPool.current);\n    };\n    const updateGameState = () => {\n      if (!playerTank.current || !canvasRef.current) return;\n      let newX = playerTank.current.x;\n      let newY = playerTank.current.y;\n      if (keys.w) newY -= playerTank.current.speed * frameMultiplier;\n      if (keys.s) newY += playerTank.current.speed * frameMultiplier;\n      if (keys.a) newX -= playerTank.current.speed * frameMultiplier;\n      if (keys.d) newX += playerTank.current.speed * frameMultiplier;\n      newX = Math.max(45, Math.min(canvasRef.current.width - 45, newX));\n      newY = Math.max(45, Math.min(canvasRef.current.height - 45, newY));\n      playerTank.current.updatePosition(newX, newY);\n      const dx = mouse.x - playerTank.current.x;\n      const dy = mouse.y - playerTank.current.y;\n      playerTank.current.angle = Math.atan2(dy, dx);\n      if (mouse.shooting && Date.now() - playerTank.current.lastShot > CONFIG.FIRE_RATE) {\n        const barrelEndX = playerTank.current.x + Math.cos(playerTank.current.angle) * playerTank.current.barrelSize;\n        const barrelEndY = playerTank.current.y + Math.sin(playerTank.current.angle) * playerTank.current.barrelSize;\n        const audioPoolNew = playSound(\"/sound/shoot/shooooot.mp3\", isSoundOn.current, audioPool.current);\n        audioPool.current = audioPoolNew;\n        const bullet = new Bullet(barrelEndX, barrelEndY, playerTank.current.angle, playerTank.current.bulletSpeed * frameMultiplier, playerTank.current.bulletColor, playerTank.current.isBuffed ? 18 : 7, playerTank.current.isPlayer, playerTank.current.isBuffed ? 2 : 1, \"player\");\n        bullets.current.push(bullet);\n        playerTank.current.lastShot = Date.now();\n      }\n      bullets.current = bullets.current.filter(bullet => !bullet.isExpired);\n      bullets.current.forEach(bullet => bullet.update());\n      bullets.current.forEach((bullet, bulletIndex) => {\n        if (playerTank.current && !bullet.isExpired) {\n          const dx = playerTank.current.x - bullet.x;\n          const dy = playerTank.current.y - bullet.y;\n          if (Math.sqrt(dx * dx + dy * dy) < 35) {\n            const dead = playerTank.current.takeDamage(bullet.damage);\n            bullets.current.splice(bulletIndex, 1);\n            updateGameStat(\"damageTaken\", prev => prev + bullet.damage);\n            if (dead && !isDead.current) {\n              const totalScore = totalScoreRef.current;\n              handleTotalScore(totalScore, true);\n              isDead.current = true;\n              explosions.current.push({\n                x: playerTank.current.x,\n                y: playerTank.current.y,\n                frame: 16,\n                width: 400,\n                height: 395\n              });\n              playRandomSound(sounds, \"death\", isSoundOn.current, audioPool.current);\n              setTimeout(() => {\n                setGameState(\"gameover\");\n              }, 1000);\n            } else {\n              const audioPoolNew = playSound(\"/sound/applepay.mp3\", isSoundOn.current, audioPool.current);\n              audioPool.current = audioPoolNew;\n            }\n          }\n        }\n        enemies.current.forEach((enemy, enemyIndex) => {\n          if (bullet.isPlayer) {\n            const dx = enemy.x - bullet.x;\n            const dy = enemy.y - bullet.y;\n            if (Math.sqrt(dx * dx + dy * dy) < enemy.width / 2) {\n              const result = enemy.takeDamage(bullet.damage);\n              bullets.current.splice(bulletIndex, 1);\n              updateGameStat(\"damageGiven\", prev => prev + bullet.damage);\n              switch (result) {\n                case \"drop_heart\":\n                  hearts.current.push(new Heart(enemy.x, enemy.y));\n                  killEnemy(enemy, enemyIndex);\n                  return;\n                case \"drop_buff\":\n                  buffs.current.push(new Buff(enemy.x, enemy.y));\n                  killEnemy(enemy, enemyIndex);\n                  return;\n                case false:\n                  const pool = playRandomSound(sounds, \"hit\", isSoundOn.current, audioPool.current);\n                  audioPool.current = pool;\n                  return;\n              }\n            }\n          }\n        });\n      });\n      hearts.current.forEach((heart, heartIndex) => {\n        if (playerTank.current) {\n          const dx = playerTank.current.x - heart.x;\n          const dy = playerTank.current.y - heart.y;\n          if (Math.sqrt(dx * dx + dy * dy) < playerTank.current.width / 2 && playerTank.current.health < playerTank.current.maxHealth) {\n            hearts.current.splice(heartIndex, 1);\n            const audioPoolNew = playSound(\"/sound/heal.mp3\", isSoundOn.current, audioPool.current);\n            audioPool.current = audioPoolNew;\n            playerTank.current.heal();\n            updateGameStat(\"healsUsed\", prev => prev + 1);\n          }\n          const expired = heart.isExpired();\n          if (expired) {\n            hearts.current.splice(heartIndex, 1);\n          }\n        }\n      });\n      buffs.current.forEach((buff, buffIndex) => {\n        if (playerTank.current) {\n          const dx = playerTank.current.x - buff.x;\n          const dy = playerTank.current.y - buff.y;\n          if (Math.sqrt(dx * dx + dy * dy) < playerTank.current.width / 2) {\n            buffs.current.splice(buffIndex, 1);\n            const audioPoolNew = playSound(\"/sound/heal.mp3\", isSoundOn.current, audioPool.current);\n            audioPool.current = audioPoolNew;\n            playerTank.current.isBuffed = true;\n            startBuffTimer(10, playerTank);\n            updateGameStat(\"buffsTaken\", prev => prev + 1);\n          }\n          const expired = buff.isExpired();\n          if (expired) {\n            buffs.current.splice(buffIndex, 1);\n          }\n        }\n      });\n      enemies.current.forEach(enemy => {\n        const bullet = enemy.updateAI(playerTank.current.x, playerTank.current.y);\n        if (bullet) {\n          bullets.current.push(bullet);\n        }\n      });\n      if (killCountRef.current > 10) {\n        playerTank.current.maxHealth = 8;\n      }\n    };\n    const gameLoop = () => {\n      if (!playerTank.current) return;\n      ctx.clearRect(0, 0, CONFIG.CANVAS_WIDTH, CONFIG.CANVAS_HEIGHT);\n      ctx.fillStyle = '#ffccff';\n      ctx.fillRect(0, 0, CONFIG.CANVAS_WIDTH, CONFIG.CANVAS_HEIGHT);\n      const drawMap = ctx => {\n        ctx.fillStyle = '#800080';\n        for (let y = 0; y < CONFIG.MAP.length; y++) {\n          for (let x = 0; x < CONFIG.MAP[y].length; x++) {\n            if (CONFIG.MAP[y][x] === 1) {\n              ctx.fillRect(x * CONFIG.CELL_SIZE, y * CONFIG.CELL_SIZE, CONFIG.CELL_SIZE - 1, CONFIG.CELL_SIZE - 1);\n            }\n          }\n        }\n      };\n      drawMap(ctx);\n      if (gameState === \"playing\") {\n        updateGameState();\n      }\n      playerTank.current.draw(ctx, isDead.current);\n      enemies.current.forEach(enemy => enemy.draw(ctx));\n      bullets.current.forEach(bullet => bullet.draw(ctx));\n      hearts.current.forEach(heart => heart.draw(ctx));\n      buffs.current.forEach(buff => buff.drawBuff(ctx));\n      explosions.current.forEach((explosion, index) => {\n        if (explosion.frame >= explosionFrames.length) {\n          explosions.current.splice(index, 1);\n          return;\n        }\n        ctx.drawImage(explosionFrames[explosion.frame], explosion.x - explosion.width / 2 + 10 / 2, explosion.y - explosion.height / 2 + 20 / 2, explosion.height, explosion.height);\n        explosion.frame += Math.ceil(frameMultiplier);\n      });\n      requestAnimationFrame(gameLoop);\n    };\n    window.addEventListener('keydown', e => keyHandler(e, true));\n    window.addEventListener('keyup', e => keyHandler(e, false));\n    canvasRef.current.addEventListener('mousemove', mouseMoveHandler);\n    canvasRef.current.addEventListener('mousedown', () => mouse.shooting = true);\n    canvasRef.current.addEventListener('mouseup', () => mouse.shooting = false);\n    gameLoop();\n    return () => {\n      var _canvasRef$current;\n      window.removeEventListener('keydown', e => keyHandler(e, true));\n      window.removeEventListener('keyup', e => keyHandler(e, false));\n      (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.removeEventListener('mousemove', mouseMoveHandler);\n    };\n  }, [gameState]);\n  if (isUnsupportedBrowser()) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-mobile bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-warning\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Unsupported browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please use browser from the list below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            textAlign: \"left\",\n            padding: 0,\n            margin: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Chrome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Edge (Chrome based)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Safari (Chrome based)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 7\n    }, this);\n  }\n  if (isMobile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-mobile bg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-warning\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Desktop version only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please use a larger screen to play the game.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.width,\n        height: (_canvasRef$current3 = canvasRef.current) === null || _canvasRef$current3 === void 0 ? void 0 : _canvasRef$current3.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), gameState === \"countdown\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coundown bg\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: countdownValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(LeaderboardPopup, {\n        isOpen: isLeaderboardOpen,\n        onClose: () => setIsLeaderboardOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 7\n      }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(GameUI, {\n        killCount: gameStat.killCount,\n        buffTimerValue: buffTimerValue,\n        soundBtnLabelOn: soundBtnLabelOn,\n        onSoundToggle: toggleSound,\n        onStopGame: handleStopGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 11\n      }, this), gameState === 'menu' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"total-score h1\",\n            children: [\"Kill everyone \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 60\n            }, this), \" Dodge everything\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: isStartButtonDisabled,\n            className: \"leaderboard-button\",\n            onClick: () => setIsLeaderboardOpen(true),\n            children: \"Leaderboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: isStartButtonDisabled,\n              style: {\n                marginRight: \"10px\"\n              },\n              onClick: toggleSound,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"counter-label\",\n                children: soundBtnLabelOn ? \"Disable sounds\" : \"Enable sounds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startCountdown,\n              disabled: isStartButtonDisabled,\n              children: 'Start'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), gameState === 'gameover' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"total-score h1\",\n            children: [\"Your total score: \", gameStat.totalScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"leaderboard-button\",\n            onClick: () => setIsLeaderboardOpen(true),\n            children: \"Leaderboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-menu\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startCountdown,\n              children: 'Try again'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-stat\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Total kills: \", gameStat.killCount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Bosses killed: \", gameStat.fireMondalakKillKount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Damage dealt: \", gameStat.damageGiven]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 763,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Damage taken: \", gameStat.damageTaken]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Heals used: \", gameStat.healsUsed]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 767,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Buffs taken: \", gameStat.buffsTaken]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsTable, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 689,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"B5aMIB1HFsbYLeG8Nn7+lxx/Cls=\", false, function () {\n  return [useFrameMultiplier, useTransactions];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useRef","useEffect","CONFIG","Mondalak","Bullet","Heart","Buff","createEnemy","loadSounds","playRandomSound","playSound","getLeaderBoard","useFrameMultiplier","useTransactions","LeaderboardPopup","TransactionsTable","GameUI","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","_canvasRef$current2","_canvasRef$current3","canvasRef","explosions","enemies","playerTank","bullets","isDead","audioPool","hearts","buffs","killCountRef","totalScoreRef","countdownRef","isSoundOn","buffTimerRef","frameMultiplier","transactions","handleMint","handleTotalScore","imageCache","fire","player","imageCacheRef","assetsLoaded","setAssetsLoaded","gameState","setGameState","sounds","setSounds","soundBtnLabelOn","setSoundBtnLabelOn","countdownValue","setCountdownValue","buffTimerValue","setBuffTimerValue","isStartButtonDisabled","setIsStartButtonDisabled","gameStat","setGameStat","totalScore","killCount","fireMondalakKillKount","damageTaken","damageGiven","healsUsed","buffsTaken","isLeaderboardOpen","setIsLeaderboardOpen","updateGameStat","key","value","prev","explosionFrames","setExplosionFrames","isMobile","setIsMobile","bulletPoolRef","isUnsupportedBrowser","ua","navigator","userAgent","toLowerCase","includes","startCountdown","current","counter","countdownInterval","setInterval","clearInterval","startBuffTimer","number","isBuffed","buffCountDown","preloadImages","imageCacheEnemies","imageCacheFire","imageCachePlayer","loadImage","src","Promise","resolve","img","Image","onload","enemyImages","all","Object","entries","flatMap","srcList","map","index","enemyFireImages","playerImages","explosionFramesArr","Array","from","length","_","i","toggleSound","resetGameObjects","width","BULLET_SPEED","FIRE_RATE","forEach","audio","pause","currentTime","spawnEnemies","push","maxEnemiesAllowed","Math","min","MAX_ENEMIES_BEGINNING","floor","MAX_ENEMIES","enemiesToSpawn","spawnDelay","random","setTimeout","enemyType","difficulty","adjustedDifficulty","handleStopGame","mediaQuery","window","matchMedia","handleResize","event","matches","addEventListener","console","log","removeEventListener","then","document","body","style","overflow","catch","error","ctx","getContext","CANVAS_WIDTH","height","CANVAS_HEIGHT","keys","w","a","s","d","mouse","x","y","shooting","keyHandler","e","isKeyDown","getScale","rect","getBoundingClientRect","mouseMoveHandler","scale","clientX","left","clientY","top","killEnemy","enemy","enemyIndex","frame","splice","newKillCount","type","updateGameState","newX","newY","speed","max","updatePosition","dx","dy","angle","atan2","Date","now","lastShot","barrelEndX","cos","barrelSize","barrelEndY","sin","audioPoolNew","bullet","bulletSpeed","bulletColor","isPlayer","filter","isExpired","update","bulletIndex","sqrt","dead","takeDamage","damage","result","pool","heart","heartIndex","health","maxHealth","heal","expired","buff","buffIndex","updateAI","gameLoop","clearRect","fillStyle","fillRect","drawMap","MAP","CELL_SIZE","draw","drawBuff","explosion","drawImage","ceil","requestAnimationFrame","_canvasRef$current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","padding","margin","ref","isOpen","onClose","onSoundToggle","onStopGame","disabled","onClick","marginRight","_c","$RefreshReg$"],"sources":["/home/nick/Desktop/Monagaynanimas_Neynar/src/components/Game/Game.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { CONFIG } from '../../game/config.ts';\nimport { Mondalak } from '../../game/classes/Mondalak.ts';\nimport { Bullet } from '../../game/classes/Bullet.ts';\nimport { GameState } from '../../types.ts';\nimport { Enemy } from '../../game/classes/Enemy.ts';\nimport { Heart } from '../../game/classes/Heart.ts';\nimport { Buff } from '../../game/classes/Heart.ts';\nimport createEnemy from '../../game/createEnemy.ts';\nimport { loadSounds, playRandomSound, playSound, getLeaderBoard } from '../../game/utils.ts';\nimport { useFrameMultiplier } from '../../providers/FrameMultiplierProvider.tsx';\nimport { useTransactions } from '../../hooks/useTransactions.ts';\nimport LeaderboardPopup from '../LeaderboardPopup/LeaderboardPopup.tsx';\nimport TransactionsTable from '../TransactionsTable/TransactionsTable.tsx';\nimport GameUI from '../GameUI/GameUI.tsx';\n\nconst Game = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const explosions = useRef<{ x: number; y: number; frame: number, width: number, height: number }[]>([]);\n  const enemies = useRef<Enemy[]>([]);\n  const playerTank = useRef<Mondalak | null>(null);\n  const bullets = useRef<Bullet[]>([]);\n  const isDead = useRef<boolean>(false);\n  const audioPool = useRef<HTMLAudioElement[]>([]);\n  const hearts = useRef<Heart[]>([]);\n  const buffs = useRef<Buff[]>([]);\n  const killCountRef = useRef<number>(0);\n  const totalScoreRef = useRef<number>(0);\n  const countdownRef = useRef<boolean>(false);\n  const isSoundOn = useRef<boolean>(true);\n  const buffTimerRef = useRef<NodeJS.Timeout | null>(null);\n  const frameMultiplier = useFrameMultiplier(); \n  const { transactions, handleMint, handleTotalScore } = useTransactions();\n\n  type ImageCache = {\n    enemies: {\n      [key: string]: HTMLImageElement;\n    }\n    fire: {\n      [key: string]: HTMLImageElement;\n    }\n    player: {\n      [key: string]: HTMLImageElement;\n    };\n  };\n  \n  const imageCache = {\n    enemies: {},  \n    fire: {},\n    player: {}\n  } as ImageCache;\n\n  const imageCacheRef = useRef<ImageCache>({\n    enemies: {},\n    fire: {},\n    player: {},\n  });\n\n  const [assetsLoaded, setAssetsLoaded] = useState(false);\n  const [gameState, setGameState] = useState<GameState>('menu');\n  const [sounds, setSounds] = useState<{ [key: string]: HTMLAudioElement[] } | null>(null);\n  const [soundBtnLabelOn, setSoundBtnLabelOn] = useState(true)\n  const [countdownValue, setCountdownValue] = useState<number>(3);\n  const [buffTimerValue, setBuffTimerValue] = useState<number>(0);\n  const [isStartButtonDisabled, setIsStartButtonDisabled] = useState(true);\n  const [gameStat, setGameStat] = useState({\n    totalScore: 0,\n    killCount: 0,\n    fireMondalakKillKount: 0,\n    damageTaken: 0,\n    damageGiven: 0,\n    healsUsed: 0,\n    buffsTaken: 0\n  });\n\n  const [isLeaderboardOpen, setIsLeaderboardOpen] = useState(false);\n\n  const updateGameStat = (\n    key: keyof typeof gameStat,\n    value: number | ((prev: number) => number)\n  ) => {\n    setGameStat(prev => ({\n      ...prev,\n      [key]: typeof value === \"function\" ? (value as (prev: number) => number)(prev[key]) : value\n    }));\n  };\n\n  const [explosionFrames, setExplosionFrames] = useState<HTMLImageElement[]>([]);\n\n  const [isMobile, setIsMobile] = useState(false);\n\n  const bulletPoolRef = useRef<Bullet[]>([]);\n  \n  const isUnsupportedBrowser = () => {\n    const ua = navigator.userAgent.toLowerCase();\n    return (\n      (ua.includes(\"firefox\")) ||\n      (ua.includes(\"safari\") && !ua.includes(\"chrome\")) ||\n      (ua.includes(\"edg/\") && !ua.includes(\"chrome\")) ||  \n      ua.includes(\"tor\") \n    );\n  };\n\n  const startCountdown = () => {\n    setGameState('countdown');\n    countdownRef.current = true;\n    setCountdownValue(3);\n\n    let counter = 3;\n    const countdownInterval = setInterval(() => {\n      counter--;\n      setCountdownValue(counter);\n\n      if (counter <= 0) {\n        clearInterval(countdownInterval);\n        countdownRef.current = false;\n        setGameState('playing');\n      }\n    }, 1000);\n  };\n\n  const startBuffTimer = (number: number, playerTank: React.RefObject<{ isBuffed: boolean }>) => {\n    if (!playerTank.current || gameState !== \"playing\") return;\n\n    setBuffTimerValue(number);\n    playerTank.current.isBuffed = true;\n\n    if (buffTimerRef.current) {\n      clearInterval(buffTimerRef.current);\n    }\n\n    let counter = number;\n\n    const buffCountDown = setInterval(() => {\n      counter--;\n      setBuffTimerValue(counter);\n\n      if (counter <= 0) {\n        clearInterval(buffCountDown);\n        buffTimerRef.current = null;\n        if (playerTank.current) {\n          playerTank.current.isBuffed = false;\n        }\n      }\n    }, 1000);\n\n    buffTimerRef.current = buffCountDown;\n  };\n\n  const preloadImages = async () => {\n    const imageCacheEnemies = {\n      \"default\": [\n        \"/chars/10.svg\",\n        \"/chars/11.svg\",\n        \"/chars/12.svg\",\n        \"/chars/13.svg\",\n        \"/chars/14.svg\",\n      ],\n    };\n    const imageCacheFire = {\n      \"fire\": [\"/chars/8.svg\"]\n    };\n  \n    const imageCachePlayer = {\n      \"main\": [\"/chars/15.svg\"]\n    };\n  \n    const loadImage = (src: string) => {\n      return new Promise<HTMLImageElement>((resolve) => {\n        const img = new Image();\n        img.src = src;\n        img.onload = () => resolve(img);\n      });\n    };\n  \n    const enemyImages = await Promise.all(\n      Object.entries(imageCacheEnemies).flatMap(([key, srcList]) =>\n        srcList.map(async (src, index) => {\n          const img = await loadImage(src);\n          imageCache.enemies[index] = img;\n        })\n      )\n    );\n\n    const enemyFireImages = await Promise.all(\n      Object.entries(imageCacheFire).flatMap(([key, srcList]) =>\n        srcList.map(async (src, index) => {\n          const img = await loadImage(src);\n          imageCache.fire[index] = img;\n        })\n      )\n    );\n  \n    const playerImages = await Promise.all(\n      Object.entries(imageCachePlayer).flatMap(([key, srcList]) =>\n        srcList.map(async (src, index) => {\n          const img = await loadImage(src);\n          imageCache.player[index] =  img;\n        })\n      )\n    );\n  \n    const explosionFramesArr = await Promise.all(\n      Array.from({ length: 151 - 16 + 1 }, (_, i) => 16 + i).map(async (i) => {\n        const img = await loadImage(`/explotion/frame(${i}).png`);\n        return img;\n      })\n    );\n  \n    setExplosionFrames(explosionFramesArr);\n    imageCacheRef.current = imageCache;\n  };\n\n  const toggleSound = () => {\n    setSoundBtnLabelOn(!isSoundOn.current)\n    isSoundOn.current = !isSoundOn.current;\n  };\n\n  const resetGameObjects = () => {\n    playerTank.current = new Mondalak(\n      canvasRef.current!.width / 2,\n      canvasRef.current!.width / 2,\n      true,\n      CONFIG.BULLET_SPEED,\n      CONFIG.FIRE_RATE,\n      \"#c005c7\",\n      \"main\",\n      imageCacheRef.current.player[0]\n    );\n\n    bullets.current = [];\n    hearts.current = [];\n    buffs.current = [];\n    buffTimerRef.current = null;\n\n    updateGameStat(\"killCount\", 0);\n    updateGameStat(\"fireMondalakKillKount\", 0);\n    updateGameStat(\"damageTaken\", 0);\n    updateGameStat(\"damageGiven\", 0);\n    updateGameStat(\"totalScore\", 0);\n    updateGameStat(\"healsUsed\", 0);\n    updateGameStat(\"buffsTaken\", 0);\n\n    setBuffTimerValue(0);\n    killCountRef.current = 0;\n    totalScoreRef.current = 0;\n\n    isDead.current = false;\n    audioPool.current.forEach(audio => {\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    audioPool.current = [];\n\n    if (gameState === \"countdown\") {\n      enemies.current = [];\n      spawnEnemies(0);\n    }\n\n    if (bulletPoolRef.current.length === 0) {\n      for (let i = 0; i < 50; i++) {\n        bulletPoolRef.current.push(new Bullet(0, 0, 0, 0, '', 0, false, 0, ''));\n      }\n    }\n  };\n\n  const spawnEnemies = (killCount) => {\n    if (!killCount) {\n      createEnemy(enemies.current, 1, true, \"default\", frameMultiplier, imageCacheRef.current);\n      return;\n    }\n\n    const maxEnemiesAllowed = Math.min(CONFIG.MAX_ENEMIES_BEGINNING + Math.floor(killCount / 10), CONFIG.MAX_ENEMIES);\n\n    if (enemies.current.length < maxEnemiesAllowed) {\n      const enemiesToSpawn = maxEnemiesAllowed - enemies.current.length;\n\n      for (let i = 0; i < enemiesToSpawn; i++) {\n        const spawnDelay = 150 + Math.random() * (430 - 150);\n        setTimeout(() => {\n          if (enemies.current.length < maxEnemiesAllowed) {\n            const enemyType = Math.random() < 0.05 ? \"fire\" : \"default\";\n            const difficulty = Math.min(Math.floor(killCount / 10), 10);\n            const adjustedDifficulty = enemyType === \"fire\" ? difficulty * 10 : difficulty;\n            enemies.current = createEnemy(enemies.current, adjustedDifficulty, false, enemyType, frameMultiplier, imageCacheRef.current);\n          }\n        }, spawnDelay);\n      }\n    }\n  };\n\n  const handleStopGame = () => {\n    const totalScore = totalScoreRef.current;\n    handleTotalScore(totalScore, true);\n    setGameState(\"menu\");\n    resetGameObjects();\n  }\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 1100px)\");\n\n    const handleResize = (event: MediaQueryListEvent) => {\n      setIsMobile(event.matches);\n    };\n\n    setIsMobile(mediaQuery.matches);\n    mediaQuery.addEventListener(\"change\", handleResize);\n    console.log(frameMultiplier);\n    return () => mediaQuery.removeEventListener(\"change\", handleResize);\n  }, []);\n\n  useEffect(() => {\n      loadSounds().then(setSounds);\n      preloadImages().then(() => {\n        setAssetsLoaded(true);\n      });\n      \n      document.body.style.overflow = 'hidden';\n      \n      setTimeout(() => {\n        setIsStartButtonDisabled(false);\n        document.body.style.overflow = 'auto';\n      }, 1000);\n      \n      return () => {\n        document.body.style.overflow = 'auto';\n      };\n  }, []);\n\n  useEffect(() => {\n    if (gameState === 'playing' || gameState === 'menu') {\n      // Preload leaderboard data\n      getLeaderBoard().catch(error => console.error('Error getting leaderboard:', error));\n    }\n  }, [gameState]);\n\n  useEffect(() => {\n    if (gameState === \"playing\" || gameState === \"countdown\") {\n      if ( assetsLoaded ) {\n        resetGameObjects();\n      } else {\n        preloadImages().then(() => {\n          setAssetsLoaded(true);\n          resetGameObjects();\n        });\n      }\n\n    } else {\n      playerTank.current = null;\n      enemies.current = [];\n      bullets.current = [];\n    }\n\n  }, [gameState]);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    \n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n\n    canvasRef.current.width = CONFIG.CANVAS_WIDTH;\n    canvasRef.current.height = CONFIG.CANVAS_HEIGHT;\n\n    const keys = { w: false, a: false, s: false, d: false };\n    const mouse = { x: 0, y: 0, shooting: false };\n\n    const keyHandler = (e: KeyboardEvent, isKeyDown: boolean) => {\n      switch (e.key.toLowerCase()) {\n        case 'w': case 'ц': keys.w = isKeyDown; break;\n        case 'a': case 'ф': keys.a = isKeyDown; break;\n        case 's': case 'ы': case \"і\": keys.s = isKeyDown; break;\n        case 'd': case 'в': keys.d = isKeyDown; break;\n      }\n    };\n\n    const getScale = () => {\n      const rect = canvasRef.current!.getBoundingClientRect();\n      return rect.width / CONFIG.CANVAS_WIDTH;\n    };\n\n    const mouseMoveHandler = (e: MouseEvent) => {\n      const scale = getScale();\n\n      const rect = canvasRef.current!.getBoundingClientRect();\n      mouse.x = (e.clientX - rect.left) / scale;\n      mouse.y = (e.clientY - rect.top) / scale;\n    };\n\n    const killEnemy = (enemy, enemyIndex) => {\n      explosions.current.push({ x: enemy.x, y: enemy.y, frame: 16, width: 100, height: 96 });\n      enemies.current.splice(enemyIndex, 1);\n\n      setGameStat(prev => {\n        const newKillCount = prev.killCount + 1;\n        killCountRef.current = newKillCount;\n        totalScoreRef.current = prev.totalScore + (enemy.type === \"fire\" ? 3 : 1);\n        spawnEnemies(newKillCount);\n        \n        return {\n          ...prev,\n          totalScore: prev.totalScore + (enemy.type === \"fire\" ? 3 : 1),\n          killCount: newKillCount,\n          fireMondalakKillKount: enemy.type === \"fire\" ? prev.fireMondalakKillKount + 1 : prev.fireMondalakKillKount\n        };\n      });\n\n      setTimeout(() => {\n        const totalScore = totalScoreRef.current;\n        handleTotalScore(totalScore, false);\n      }, 0);\n\n      // if (enemy.type === \"fire\") handleMint(killCountRef.current);\n\n      audioPool.current = playRandomSound(sounds, \"kill\", isSoundOn.current, audioPool.current);\n    };\n\n    const updateGameState = () => {\n      if (!playerTank.current || !canvasRef.current) return;\n\n      let newX = playerTank.current.x;\n      let newY = playerTank.current.y;\n\n      if (keys.w) newY -= playerTank.current.speed * frameMultiplier;\n      if (keys.s) newY += playerTank.current.speed * frameMultiplier;\n      if (keys.a) newX -= playerTank.current.speed * frameMultiplier;\n      if (keys.d) newX += playerTank.current.speed * frameMultiplier;\n\n      newX = Math.max(45, Math.min(canvasRef.current!.width - 45, newX));\n      newY = Math.max(45, Math.min(canvasRef.current!.height - 45, newY));\n\n      playerTank.current.updatePosition(newX, newY);\n\n      const dx = mouse.x - playerTank.current.x;\n      const dy = mouse.y - playerTank.current.y;\n      playerTank.current.angle = Math.atan2(dy, dx);\n\n      if (mouse.shooting && Date.now() - playerTank.current.lastShot > CONFIG.FIRE_RATE) {\n\n        const barrelEndX = playerTank.current.x + Math.cos(playerTank.current.angle) * playerTank.current.barrelSize;\n        const barrelEndY = playerTank.current.y + Math.sin(playerTank.current.angle) * playerTank.current.barrelSize;\n\n        const audioPoolNew: HTMLAudioElement[] = playSound(\"/sound/shoot/shooooot.mp3\", isSoundOn.current, audioPool.current);\n\n        audioPool.current = audioPoolNew;\n\n        const bullet = new Bullet(\n          barrelEndX,\n          barrelEndY,\n          playerTank.current.angle,\n          playerTank.current.bulletSpeed * frameMultiplier,\n          playerTank.current.bulletColor,\n          playerTank.current.isBuffed ? 18 : 7,\n          playerTank.current.isPlayer,\n          playerTank.current.isBuffed ? 2 : 1,\n          \"player\"\n        );\n        bullets.current.push(bullet);\n        playerTank.current.lastShot = Date.now();\n      }\n\n      bullets.current = bullets.current.filter(bullet => !bullet.isExpired);\n      bullets.current.forEach(bullet => bullet.update());\n\n      bullets.current.forEach((bullet, bulletIndex) => {\n        if (playerTank.current && !bullet.isExpired) {\n          const dx = playerTank.current.x - bullet.x;\n          const dy = playerTank.current.y - bullet.y;\n          if (Math.sqrt(dx * dx + dy * dy) < 35) {\n            const dead = playerTank.current.takeDamage(bullet.damage);\n\n            bullets.current.splice(bulletIndex, 1);\n            updateGameStat(\"damageTaken\", prev => prev + bullet.damage);\n            if (dead && !isDead.current) {\n              const totalScore = totalScoreRef.current;\n              handleTotalScore(totalScore, true);\n\n              isDead.current = true;\n              explosions.current.push({ x: playerTank.current.x, y: playerTank.current.y, frame: 16, width: 400, height: 395 });\n\n              playRandomSound(sounds, \"death\", isSoundOn.current, audioPool.current);\n\n              \n              setTimeout(() => {\n                setGameState(\"gameover\");\n              }, 1000);\n            } else {\n              const audioPoolNew: HTMLAudioElement[] = playSound(\"/sound/applepay.mp3\", isSoundOn.current, audioPool.current);\n              audioPool.current = audioPoolNew;\n            }\n          }\n        }\n\n        enemies.current.forEach((enemy, enemyIndex) => {\n          if (bullet.isPlayer) {\n            const dx = enemy.x - bullet.x;\n            const dy = enemy.y - bullet.y;\n            if (Math.sqrt(dx * dx + dy * dy) < (enemy.width / 2)) {\n              const result = enemy.takeDamage(bullet.damage);\n              bullets.current.splice(bulletIndex, 1);\n              updateGameStat(\"damageGiven\", prev => prev + bullet.damage);\n              \n              switch (result) {\n                case \"drop_heart\":\n                  hearts.current.push(new Heart(\n                    enemy.x,\n                    enemy.y\n                  ))\n\n                  killEnemy(enemy, enemyIndex);\n                  return;\n                case \"drop_buff\":\n                  buffs.current.push(new Buff(\n                    enemy.x,\n                    enemy.y\n                  ))\n\n                  killEnemy(enemy, enemyIndex);\n                  return;\n                case false:\n                  const pool = playRandomSound(sounds, \"hit\", isSoundOn.current, audioPool.current);\n                  audioPool.current = pool;\n                  return;\n              }\n            }\n          }\n        });\n\n      });\n      hearts.current.forEach((heart, heartIndex) => {\n        if (playerTank.current) {\n          const dx = playerTank.current.x - heart.x;\n          const dy = playerTank.current.y - heart.y;\n\n          if (Math.sqrt(dx * dx + dy * dy) < (playerTank.current.width / 2) && playerTank.current.health < playerTank.current.maxHealth) {\n            hearts.current.splice(heartIndex, 1);\n            const audioPoolNew: HTMLAudioElement[] = playSound(\"/sound/heal.mp3\", isSoundOn.current, audioPool.current);\n\n            audioPool.current = audioPoolNew;\n            playerTank.current.heal();\n            updateGameStat(\"healsUsed\", prev => prev + 1);\n\n          }\n\n          const expired = heart.isExpired();\n          if (expired) {\n            hearts.current.splice(heartIndex, 1);\n          }\n        }\n      })\n\n      buffs.current.forEach((buff, buffIndex) => {\n        if (playerTank.current) {\n          const dx = playerTank.current.x - buff.x;\n          const dy = playerTank.current.y - buff.y;\n\n          if (Math.sqrt(dx * dx + dy * dy) < (playerTank.current.width / 2)) {\n            buffs.current.splice(buffIndex, 1);\n            const audioPoolNew: HTMLAudioElement[] = playSound(\"/sound/heal.mp3\", isSoundOn.current, audioPool.current);\n\n            audioPool.current = audioPoolNew;\n            playerTank.current.isBuffed = true;\n            startBuffTimer(10, playerTank);\n            updateGameStat(\"buffsTaken\", prev => prev + 1);\n\n          }\n\n          const expired = buff.isExpired();\n          if (expired) {\n            buffs.current.splice(buffIndex, 1);\n          }\n        }\n      })\n\n      enemies.current.forEach(enemy => {\n        const bullet = enemy.updateAI(playerTank.current!.x, playerTank.current!.y);\n        if (bullet) {\n          bullets.current.push(bullet);\n        }\n      });\n   \n\n      if (killCountRef.current > 10) {\n        playerTank.current.maxHealth = 8\n      }\n    };\n\n    const gameLoop = () => {\n      if (!playerTank.current) return;\n      \n      ctx.clearRect(0, 0, CONFIG.CANVAS_WIDTH, CONFIG.CANVAS_HEIGHT);\n      ctx.fillStyle = '#ffccff';\n      ctx.fillRect(0, 0, CONFIG.CANVAS_WIDTH, CONFIG.CANVAS_HEIGHT);\n      \n      const drawMap = (ctx: CanvasRenderingContext2D) => {\n        ctx.fillStyle = '#800080';\n        for (let y = 0; y < CONFIG.MAP.length; y++) {\n          for (let x = 0; x < CONFIG.MAP[y].length; x++) {\n            if (CONFIG.MAP[y][x] === 1) {\n              ctx.fillRect(\n                x * CONFIG.CELL_SIZE,\n                y * CONFIG.CELL_SIZE,\n                CONFIG.CELL_SIZE - 1,\n                CONFIG.CELL_SIZE - 1\n              );\n            }\n          }\n        }\n      };\n\n      drawMap(ctx);\n\n      if (gameState === \"playing\") {\n        updateGameState();\n      }\n\n      playerTank.current.draw(ctx, isDead.current);\n\n      enemies.current.forEach(enemy => enemy.draw(ctx));\n\n      bullets.current.forEach(bullet => bullet.draw(ctx));\n\n      hearts.current.forEach(heart => heart.draw(ctx));\n      buffs.current.forEach(buff => buff.drawBuff(ctx));\n\n      explosions.current.forEach((explosion, index) => {\n        if (explosion.frame >= explosionFrames.length) {\n          explosions.current.splice(index, 1);\n          return;\n        }\n        ctx.drawImage(explosionFrames[explosion.frame], explosion.x - (explosion.width / 2) + (10 / 2),\n          explosion.y - (explosion.height / 2) + (20 / 2), explosion.height, explosion.height);\n        explosion.frame += Math.ceil(frameMultiplier);\n      });\n\n      \n    \n\n      requestAnimationFrame(gameLoop);\n    };\n\n    window.addEventListener('keydown', (e) => keyHandler(e, true));\n    window.addEventListener('keyup', (e) => keyHandler(e, false));\n    canvasRef.current.addEventListener('mousemove', mouseMoveHandler);\n    canvasRef.current.addEventListener('mousedown', () => mouse.shooting = true);\n    canvasRef.current.addEventListener('mouseup', () => mouse.shooting = false);\n\n    gameLoop();\n\n    return () => {\n      window.removeEventListener('keydown', (e) => keyHandler(e, true));\n      window.removeEventListener('keyup', (e) => keyHandler(e, false));\n      canvasRef.current?.removeEventListener('mousemove', mouseMoveHandler);\n    };\n  }, [gameState]);\n\n  if (isUnsupportedBrowser()) {\n    return (\n      <div className=\"bg-mobile bg\">\n        <div className=\"mobile-warning\">\n          <h2>Unsupported browser</h2>\n          <p>Please use browser from the list below.</p>\n          <ul style={{\n            textAlign: \"left\",\n            padding: 0,\n            margin: 0\n          }}>\n            <li>Chrome</li>\n            <li>Edge (Chrome based)</li>\n            <li>Safari (Chrome based)</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  if (isMobile) {\n    return (\n      <div className=\"bg-mobile bg\">\n        <div className=\"mobile-warning\">\n          <h2>Desktop version only</h2>\n          <p>Please use a larger screen to play the game.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"game-container\">\n      <div>\n        <canvas ref={canvasRef} width={canvasRef.current?.width} height={canvasRef.current?.height}></canvas>\n        {\n          gameState === \"countdown\" && (\n            <>\n              <div className=\"coundown bg\">\n                <h1>{countdownValue}</h1>\n              </div>\n            </>\n          )\n        }\n\n      <LeaderboardPopup \n        isOpen={isLeaderboardOpen} \n        onClose={() => setIsLeaderboardOpen(false)} \n      />\n\n        {gameState === 'playing' && (\n          <GameUI\n            killCount={gameStat.killCount}\n            buffTimerValue={buffTimerValue}\n            soundBtnLabelOn={soundBtnLabelOn}\n            onSoundToggle={toggleSound}\n            onStopGame={handleStopGame}\n          />\n        )}\n        {gameState === 'menu' && (\n          <>\n            <div className=\"bg\">\n              <h1 className='total-score h1'>Kill everyone <br /> Dodge everything</h1>\n                <button disabled={isStartButtonDisabled} className=\"leaderboard-button\" onClick={() => setIsLeaderboardOpen(true)}>\n                  Leaderboard\n                </button>\n\n              <div className=\"game-menu\">\n                <button disabled={isStartButtonDisabled} style={{\n                  marginRight: \"10px\"\n                }} onClick={toggleSound}>\n                  <span className=\"counter-label\">\n                    {\n                      soundBtnLabelOn ? \"Disable sounds\" : \"Enable sounds\"\n                    }\n                  </span>\n                </button>\n                <button onClick={startCountdown} disabled={isStartButtonDisabled}>\n                  {'Start'}\n                </button>\n              </div>\n            </div>\n\n          </>\n        )}\n\n        {gameState === 'gameover' && (\n          <>\n            <div className=\"bg\">\n              <h1 className='total-score h1'>Your total score: {gameStat.totalScore}</h1>\n              <button className=\"leaderboard-button\" onClick={() => setIsLeaderboardOpen(true)}>\n                  Leaderboard\n                </button>\n              <div className=\"game-menu\">\n\n                <button onClick={startCountdown}>\n                  {'Try again'}\n                </button>\n              </div>\n\n              <div className=\"game-stat\">\n\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <span>Total kills: {gameStat.killCount}</span>\n                    <span>Bosses killed: {gameStat.fireMondalakKillKount}</span>\n                    <span>Damage dealt: {gameStat.damageGiven}</span>\n                  </div>\n                  <div className=\"col\">\n                    <span>Damage taken: {gameStat.damageTaken}</span>\n                    <span>Heals used: {gameStat.healsUsed}</span>\n                    <span>Buffs taken: {gameStat.buffsTaken}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n\n        )}\n      </div>\n      <TransactionsTable transactions={transactions} />\n    </div>\n  );\n};\nexport default Game;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}