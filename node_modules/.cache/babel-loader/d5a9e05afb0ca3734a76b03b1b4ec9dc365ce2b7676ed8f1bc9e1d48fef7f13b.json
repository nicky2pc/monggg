{"ast":null,"code":"import { CONFIG } from '../config.ts';\nimport { Bullet } from './Bullet.ts';\nexport class Mondalak {\n  constructor(x, y, isPlayer, bulletSpeed = CONFIG.BULLET_SPEED, fireRate = CONFIG.FIRE_RATE, bulletColor, type, characterImage) {\n    this.x = void 0;\n    this.y = void 0;\n    this.angle = void 0;\n    this.speed = void 0;\n    this.bulletSpeed = void 0;\n    this.lastShot = void 0;\n    this.isPlayer = void 0;\n    this.fireRate = void 0;\n    this.bulletColor = void 0;\n    this.health = void 0;\n    this.shakeOffsetX = 0;\n    this.shakeOffsetY = 0;\n    this.maxHealth = void 0;\n    this.barrelSize = 35;\n    this.width = 70;\n    this.height = 35;\n    this.hitboxRadius = 35;\n    this.barrelThickness = 6;\n    this.shootingAnimation = false;\n    this.characterImage = void 0;\n    this.isBuffed = void 0;\n    this.type = void 0;\n    this.x = x;\n    this.y = y;\n    this.angle = 0;\n    this.speed = CONFIG.PLAYER_SPEED;\n    this.bulletSpeed = bulletSpeed;\n    this.fireRate = fireRate;\n    this.lastShot = 0;\n    this.isPlayer = isPlayer;\n    this.bulletColor = bulletColor;\n    this.health = isPlayer ? 4 : 2;\n    this.maxHealth = this.health;\n    this.isBuffed = false;\n    this.type = type;\n    this.characterImage = characterImage;\n    if (this.type === \"fire\") {\n      this.width = this.width + 30;\n      this.height = this.height + 40;\n      this.health = 4;\n      this.maxHealth = 4;\n    }\n  }\n  draw(ctx, isDead) {\n    ctx.save();\n    if (isDead) return;\n    ctx.translate(this.x + this.shakeOffsetX, this.y + this.shakeOffsetY);\n    ctx.rotate(this.angle);\n    let width = this.width;\n    let height = this.height;\n    if (this.isPlayer) {\n      width = 70;\n      height = 35;\n    }\n    ctx.scale(-1, 1);\n    ctx.drawImage(this.characterImage, -30, -15, width, height);\n    this.drawHealthBar(ctx);\n    ctx.restore();\n  }\n  drawHealthBar(ctx) {\n    const barWidth = 30;\n    const barHeight = 4;\n    const hpRatio = this.health / this.maxHealth;\n    ctx.save();\n    const translateY = this.type === \"fire\" ? 65 : 28;\n    ctx.translate(20, translateY);\n    ctx.fillStyle = '#333';\n    ctx.fillRect(-barWidth / 2, 0, barWidth, barHeight);\n    ctx.fillStyle = hpRatio > 0.5 ? '#0f0' : hpRatio > 0.3 ? '#ff0' : '#f00';\n    ctx.fillRect(-barWidth / 2, 0, barWidth * hpRatio, barHeight);\n    ctx.restore();\n  }\n  heal() {\n    if (this.health < this.maxHealth) {\n      this.health++;\n    }\n  }\n  updatePosition(newX, newY) {\n    this.x = newX;\n    this.y = newY;\n  }\n  shoot() {\n    //Only for enemies\n    if (Date.now() - this.lastShot > this.fireRate) {\n      this.lastShot = Date.now();\n      const barrelEndX = this.x + Math.cos(this.angle) * this.barrelSize;\n      const barrelEndY = this.y + Math.sin(this.angle) * this.barrelSize;\n      const bulletSize = this.type === \"fire\" ? 18 : 6;\n      const bulletDamage = this.type === \"fire\" ? 4 : 1;\n      return new Bullet(barrelEndX, barrelEndY, this.angle, this.bulletSpeed, this.bulletColor, bulletSize, this.isPlayer, bulletDamage, this.type);\n    }\n    return null;\n  }\n  takeDamage(value) {\n    this.health -= value;\n    this.applyShake();\n    if (this.health <= 0) {\n      if (!this.isPlayer) {\n        const random = Math.floor(Math.random() * 10);\n        if (random > 7) {\n          return \"drop_buff\";\n        }\n        return \"drop_heart\";\n      }\n      return \"explode\";\n    }\n    return false;\n  }\n  applyShake() {\n    let shakeFrames = 6;\n    let lastTime = 0;\n    const shakeStep = timestamp => {\n      if (!lastTime || timestamp - lastTime > 30) {\n        this.shakeOffsetX = (Math.random() - 0.5) * 4;\n        this.shakeOffsetY = (Math.random() - 0.5) * 4;\n        shakeFrames--;\n        lastTime = timestamp;\n      }\n      if (shakeFrames > 0) {\n        requestAnimationFrame(shakeStep);\n      } else {\n        this.shakeOffsetX = 0;\n        this.shakeOffsetY = 0;\n      }\n    };\n    requestAnimationFrame(shakeStep);\n  }\n}","map":{"version":3,"names":["CONFIG","Bullet","Mondalak","constructor","x","y","isPlayer","bulletSpeed","BULLET_SPEED","fireRate","FIRE_RATE","bulletColor","type","characterImage","angle","speed","lastShot","health","shakeOffsetX","shakeOffsetY","maxHealth","barrelSize","width","height","hitboxRadius","barrelThickness","shootingAnimation","isBuffed","PLAYER_SPEED","draw","ctx","isDead","save","translate","rotate","scale","drawImage","drawHealthBar","restore","barWidth","barHeight","hpRatio","translateY","fillStyle","fillRect","heal","updatePosition","newX","newY","shoot","Date","now","barrelEndX","Math","cos","barrelEndY","sin","bulletSize","bulletDamage","takeDamage","value","applyShake","random","floor","shakeFrames","lastTime","shakeStep","timestamp","requestAnimationFrame"],"sources":["/home/nick/Desktop/Monagaynanimas_Neynar/src/game/classes/Mondalak.ts"],"sourcesContent":["import { CONFIG } from '../config.ts';\nimport { Bullet } from './Bullet.ts';\n\nexport class Mondalak {\n  x: number;\n  y: number;\n  angle: number;\n  speed: number;\n  bulletSpeed: number;\n  lastShot: number;\n  isPlayer: boolean;\n  fireRate: number;\n  bulletColor: string;\n  health: number;\n  shakeOffsetX: number = 0; \n  shakeOffsetY: number = 0;\n  maxHealth: number;\n  barrelSize: number = 35;\n  width: number = 70;  \n  height: number = 35;\n  hitboxRadius: number = 35;\n  barrelThickness: number = 6;\n  shootingAnimation: boolean = false;\n  characterImage: HTMLImageElement;\n  isBuffed: boolean;\n  type: string;\n  constructor(\n    x: number,\n    y: number,\n    isPlayer: boolean,\n    bulletSpeed: number = CONFIG.BULLET_SPEED,\n    fireRate: number = CONFIG.FIRE_RATE,\n    bulletColor: string,\n    type: string,\n    characterImage: HTMLImageElement,\n  ) {\n    this.x = x;\n    this.y = y;\n    this.angle = 0;\n    this.speed = CONFIG.PLAYER_SPEED;\n    this.bulletSpeed = bulletSpeed;\n    this.fireRate = fireRate;\n    this.lastShot = 0;\n    this.isPlayer = isPlayer;\n    this.bulletColor = bulletColor;\n    this.health = isPlayer ? 4 : 2; \n    this.maxHealth = this.health; \n    this.isBuffed = false;\n    this.type = type; \n    this.characterImage = characterImage;\n    if (this.type === \"fire\") {\n      this.width = this.width + 30\n      this.height = this.height + 40\n      this.health = 4\n      this.maxHealth = 4\n    }\n  }\n  draw(ctx: CanvasRenderingContext2D, isDead?: boolean) {\n    ctx.save();\n    if (isDead) return;\n\n    ctx.translate(this.x + this.shakeOffsetX, this.y + this.shakeOffsetY);\n    ctx.rotate(this.angle);\n    let width = this.width;\n    let height = this.height;\n    if (this.isPlayer) {\n      width = 70;\n      height = 35;\n    }\n\n    ctx.scale(-1, 1); \n    ctx.drawImage(this.characterImage, -30, -15, width, height);\n\n    this.drawHealthBar(ctx);\n\n    ctx.restore();\n  }\n\n  drawHealthBar(ctx: CanvasRenderingContext2D) {\n    const barWidth = 30;\n    const barHeight = 4;\n    const hpRatio = this.health / this.maxHealth;\n\n    ctx.save();\n    const translateY = this.type === \"fire\" ? 65 : 28; \n    ctx.translate(20, translateY); \n\n    ctx.fillStyle = '#333';\n    ctx.fillRect(-barWidth / 2, 0, barWidth, barHeight);\n\n    ctx.fillStyle = hpRatio > 0.5 ? '#0f0' : hpRatio > 0.3 ? '#ff0' : '#f00';\n    ctx.fillRect(-barWidth / 2, 0, barWidth * hpRatio, barHeight);\n\n    ctx.restore();\n  }\n\n  heal() {\n    if ( this.health < this.maxHealth ) {\n      this.health++\n    }\n  }\n\n  updatePosition(newX: number, newY: number) {\n    this.x = newX;\n    this.y = newY;\n  }\n\n\n  shoot(): Bullet | null {\n    //Only for enemies\n    if (Date.now() - this.lastShot > this.fireRate) {\n      this.lastShot = Date.now();\n\n      const barrelEndX = this.x + Math.cos(this.angle) * this.barrelSize;\n      const barrelEndY = this.y + Math.sin(this.angle) * this.barrelSize;\n\n      const bulletSize = this.type === \"fire\" ? 18 : 6;\n      const bulletDamage = this.type === \"fire\" ? 4 : 1;\n\n      return new Bullet(\n          barrelEndX,  \n          barrelEndY,  \n          this.angle,\n          this.bulletSpeed,\n          this.bulletColor,\n          bulletSize,\n          this.isPlayer,\n          bulletDamage,\n          this.type\n      );    }\n    return null;\n  }\n\n  takeDamage(value): boolean | string {\n    this.health -= value;\n    this.applyShake();\n\n    if (this.health <= 0) {\n      if ( !this.isPlayer ) {\n        const random = Math.floor(Math.random() * 10);\n        if ( random > 7) { \n          return \"drop_buff\";\n        }\n\n        return \"drop_heart\"\n      }\n      return \"explode\"; \n    } \n   \n    return false;\n  }\n\n  applyShake() {\n    let shakeFrames = 6;\n    let lastTime = 0;\n    \n    const shakeStep = (timestamp) => {\n      if (!lastTime || timestamp - lastTime > 30) {\n        this.shakeOffsetX = (Math.random() - 0.5) * 4;\n        this.shakeOffsetY = (Math.random() - 0.5) * 4;\n        shakeFrames--;\n        lastTime = timestamp;\n      }\n      \n      if (shakeFrames > 0) {\n        requestAnimationFrame(shakeStep);\n      } else {\n        this.shakeOffsetX = 0;\n        this.shakeOffsetY = 0;\n      }\n    };\n    \n    requestAnimationFrame(shakeStep);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}